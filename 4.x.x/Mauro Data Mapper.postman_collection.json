{
	"info": {
		"_postman_id": "a427739e-1d91-45d9-bb07-1c3bbb59f4ae",
		"name": "Mauro Data Mapper",
		"description": "# Introduction\nWhat does your API do?\n\n# Overview\nThings that the developers should know about\n\n# Authentication\nWhat is the preferred way of using the API?\n\n# Error Codes\nWhat errors and status codes can a user expect?\n\n# Rate limit\nIs there a limit to the number of requests an user can send?",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Session",
			"item": [
				{
					"name": "Is Authenticated Session",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/session/isAuthenticated",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"session",
								"isAuthenticated"
							]
						},
						"description": "Checks to see whether the current session has been authenticated\n"
					},
					"response": []
				},
				{
					"name": "Is Application Administration Session",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/session/isApplicationAdministration",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"session",
								"isApplicationAdministration"
							]
						},
						"description": "Checks to see whether the current session has been authenticated\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"{{username}}\",\n\t\"password\" : \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/authentication/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authentication",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Login - Already logged in",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\" : \"{{username}}\",\n\t\"password\" : \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/authentication/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"authentication",
										"login"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 30 Jul 2020 09:01:37 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": 1596099697499,\n    \"status\": 409,\n    \"error\": \"Conflict\",\n    \"message\": \"A user is already logged in, logout first\",\n    \"path\": \"/api/authentication/login\"\n}"
						},
						{
							"name": "Login - Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\" : \"{{username}}\",\n\t\"password\" : \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/authentication/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"authentication",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 30 Jul 2020 08:56:43 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"a50cbdaf-c7a3-4e58-a02a-9257fb674a96\",\n    \"emailAddress\": \"admin@maurodatamapper.com\",\n    \"firstName\": \"Admin\",\n    \"lastName\": \"User\",\n    \"pending\": false,\n    \"disabled\": false,\n    \"createdBy\": \"admin@maurodatamapper.com\"\n}"
						},
						{
							"name": "Login - Invalid credentials",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\" : \"hello@test.com\",\n\t\"password\" : \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/authentication/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"authentication",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "JSESSIONID=095815F4CE13DBAD53765381F4115B98; Path=/; HttpOnly"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 31 Jul 2020 14:45:07 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"path\": \"/api/authentication/login\",\n    \"additional\": \"Invalid credentials\"\n}"
						}
					]
				},
				{
					"name": "Logout",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/authentication/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authentication",
								"logout"
							]
						},
						"description": "Log out"
					},
					"response": [
						{
							"name": "Logout - Successful",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/authentication/logout",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"authentication",
										"logout"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 30 Jul 2020 08:58:57 GMT"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Data Models",
			"item": [
				{
					"name": "Data Classes",
					"item": [
						{
							"name": "List all Data Classes in Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataClasses"
									]
								}
							},
							"response": [
								{
									"name": "List all Data Classes",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataClasses"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 10:02:16 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 2,\n    \"items\": [\n        {\n            \"id\": \"992e24f3-0ae6-4c93-9fe0-8fbf25472cbf\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableD\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        },\n        {\n            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableE\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Data Class by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses/{{data_class_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataClasses",
										"{{data_class_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Get Data Classes by ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses/{{data_class_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataClasses",
												"{{data_class_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 10:03:18 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n    \"domainType\": \"DataClass\",\n    \"label\": \"tableE\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T09:00:40.723Z\"\n}"
								}
							]
						},
						{
							"name": "Delete DataClass",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses/{{data_class_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataClasses",
										"{{data_class_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new DataClass",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\",\n    \"description\": \"{{$randomLoremText}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataClasses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Extend DataClass",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses/{{data_class_id}}/extends/{{data_model_id}}/{{$randomUUID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataClasses",
										"{{data_class_id}}",
										"extends",
										"{{data_model_id}}",
										"{{$randomUUID}}"
									]
								}
							},
							"response": [
								{
									"name": "Extend DataClass",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses/{{data_class_id}}/extends/{{data_model_id}}/36e87700-d38e-4ab8-9470-c6330fdaa770",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataClasses",
												"{{data_class_id}}",
												"extends",
												"{{data_model_id}}",
												"36e87700-d38e-4ab8-9470-c6330fdaa770"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataClass/show/eef27e15-d176-4a73-80bd-e70364ce3e59"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Content-Language",
											"value": "en-GB"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 21 Apr 2021 08:57:20 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"eef27e15-d176-4a73-80bd-e70364ce3e59\",\n    \"domainType\": \"DataClass\",\n    \"label\": \"laborum-suscipit-voluptates\",\n    \"model\": \"f5f093d2-0bc5-4fca-8a1e-9d2033163e0d\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"f5f093d2-0bc5-4fca-8a1e-9d2033163e0d\",\n            \"label\": \"similique-totam-dicta\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        }\n    ],\n    \"description\": \"Nostrum sed architecto aperiam repellat nobis. Harum suscipit tempore et. Velit impedit recusandae animi nobis quia iure qui.\",\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2021-04-21T08:57:18.636Z\",\n    \"extendsDataClasses\": [\n        {\n            \"id\": \"36e87700-d38e-4ab8-9470-c6330fdaa770\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"doloribus-debitis-ducimus\",\n            \"model\": \"f5f093d2-0bc5-4fca-8a1e-9d2033163e0d\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"f5f093d2-0bc5-4fca-8a1e-9d2033163e0d\",\n                    \"label\": \"similique-totam-dicta\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ],\n            \"description\": \"Voluptatum non quia in tenetur. Autem distinctio corrupti ut iusto ea deleniti dolore. Sapiente non laborum dolorem quis omnis quas aut corporis tempora. Aperiam aut ipsa id repellendus.\\n \\rEst harum animi odit accusantium. Error in et. Sequi vel vitae ullam est voluptatem. Sed quibusdam et consectetur occaecati. Quasi rem quis. Veritatis sunt et vel dicta dignissimos non quasi reiciendis minus.\\n \\rEt animi dolorum rerum. A deleniti cumque voluptatibus voluptates consequatur. Dolor laudantium ea laborum rem aut labore et rerum soluta.\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Remove extend DataClass",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses/{{data_class_id}}/extends/{{data_model_id}}/{{$randomUUID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataClasses",
										"{{data_class_id}}",
										"extends",
										"{{data_model_id}}",
										"{{$randomUUID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Data Types",
					"item": [
						{
							"name": "Get Data Types in Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataTypes",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataTypes"
									]
								}
							},
							"response": [
								{
									"name": "Get Data Model Data Types",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"{{$randomNoun}}\",\n    \"domainType\": \"PrimitiveType\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataTypes",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataTypes"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataType/show/895305cc-7cb9-4728-b9a6-947cd07c2d91"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 10 Aug 2020 15:59:50 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"895305cc-7cb9-4728-b9a6-947cd07c2d91\",\n    \"domainType\": \"PrimitiveType\",\n    \"label\": \"bus\",\n    \"model\": \"cce93898-a17a-4cad-925a-609d3202adc2\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"cce93898-a17a-4cad-925a-609d3202adc2\",\n            \"label\": \"perspiciatis-et-veritatis\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-10T15:59:48.693Z\"\n}"
								},
								{
									"name": "Get Data Model Data Types - None",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataTypes",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataTypes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 10 Aug 2020 15:58:26 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 0,\n    \"items\": []\n}"
								}
							]
						},
						{
							"name": "Get Data Type by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataTypes/{{data_type_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataTypes",
										"{{data_type_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Primitive DataType",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"{{$randomNoun}}\",\n    \"domainType\": \"PrimitiveType\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataTypes",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataTypes"
									]
								}
							},
							"response": [
								{
									"name": "Get Data Model Data Types - None",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataTypes",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataTypes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 10 Aug 2020 15:58:26 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 0,\n    \"items\": []\n}"
								},
								{
									"name": "Get Data Model Data Types",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"{{$randomNoun}}\",\n    \"domainType\": \"PrimitiveType\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataTypes",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataTypes"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataType/show/895305cc-7cb9-4728-b9a6-947cd07c2d91"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 10 Aug 2020 15:59:50 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"895305cc-7cb9-4728-b9a6-947cd07c2d91\",\n    \"domainType\": \"PrimitiveType\",\n    \"label\": \"bus\",\n    \"model\": \"cce93898-a17a-4cad-925a-609d3202adc2\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"cce93898-a17a-4cad-925a-609d3202adc2\",\n            \"label\": \"perspiciatis-et-veritatis\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-10T15:59:48.693Z\"\n}"
								}
							]
						},
						{
							"name": "Add Eumeration DataType with metadata",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"Custom test - copy2\",\n    \"organisation\": \"\",\n    \"domainType\": \"EnumerationType\",\n    \"referenceDataType\": {\n        \"id\": \"\"\n    },\n    \"referenceClass\": {\n        \"id\": \"\"\n    },\n    \"terminology\": {\n        \"id\": \"\"\n    },\n    \"classifiers\": [],\n    \"enumerationValues\": [\n        {\n            \"key\": \"B\",\n            \"value\": \"Letter B..........\",\n            \"category\": \"\"\n        },\n         {\n            \"key\": \"A\",\n            \"value\": \"Letter A..........\",\n            \"category\": \"\"\n        }\n    ],\n    \"metadata\": [\n        {\n            \"key\": \"resourceType\",\n            \"value\": \"\\\"ValueSet\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"id\",\n            \"value\": \"\\\"bba7163e-f89a-4a2a-9a6d-1c9b5ba782fa\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"meta\",\n            \"value\": \"{\\\"versionId\\\":\\\"17\\\",\\\"lastUpdated\\\":\\\"2020-07-28T14:37:16.266+01:00\\\"}\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"url\",\n            \"value\": \"\\\"http://mauro_test/ValueSet/Custom_test_-_copy2\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"version\",\n            \"value\": \"\\\"1.0.0\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"name\",\n            \"value\": \"\\\"Custom_test_-_copy2\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"title\",\n            \"value\": \"\\\"Custom test - copy2\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"status\",\n            \"value\": \"\\\"draft\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"experimental\",\n            \"value\": false,\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"immutable\",\n            \"value\": true,\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"copyright\",\n            \"value\": \"\\\"This is a test set\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"compose\",\n            \"value\": \"{\\\"include\\\":[{\\\"system\\\":\\\"http://mauro_test/codesystem/mauro_codes2\\\",\\\"concept\\\":[{\\\"code\\\":\\\"B\\\",\\\"display\\\":\\\"Letter B..........\\\"}]}]}\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"Extraction Version\",\n            \"value\": \"17\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"Last Updated\",\n            \"value\": \"28/07/2020, 14:37:16\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"Extraction Date\",\n            \"value\": \"21/08/2020, 12:12:14\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataTypes",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataTypes"
									]
								}
							},
							"response": [
								{
									"name": "Add Eumeration DataType with metadata",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"Custom test - copy2\",\n    \"organisation\": \"\",\n    \"domainType\": \"EnumerationType\",\n    \"referenceDataType\": {\n        \"id\": \"\"\n    },\n    \"referenceClass\": {\n        \"id\": \"\"\n    },\n    \"terminology\": {\n        \"id\": \"\"\n    },\n    \"classifiers\": [],\n    \"enumerationValues\": [\n        {\n            \"key\": \"B\",\n            \"value\": \"Letter B..........\",\n            \"category\": \"\"\n        },\n         {\n            \"key\": \"A\",\n            \"value\": \"Letter A..........\",\n            \"category\": \"\"\n        }\n    ],\n    \"metadata\": [\n        {\n            \"key\": \"resourceType\",\n            \"value\": \"\\\"ValueSet\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"id\",\n            \"value\": \"\\\"bba7163e-f89a-4a2a-9a6d-1c9b5ba782fa\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"meta\",\n            \"value\": \"{\\\"versionId\\\":\\\"17\\\",\\\"lastUpdated\\\":\\\"2020-07-28T14:37:16.266+01:00\\\"}\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"url\",\n            \"value\": \"\\\"http://mauro_test/ValueSet/Custom_test_-_copy2\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"version\",\n            \"value\": \"\\\"1.0.0\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"name\",\n            \"value\": \"\\\"Custom_test_-_copy2\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"title\",\n            \"value\": \"\\\"Custom test - copy2\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"status\",\n            \"value\": \"\\\"draft\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"experimental\",\n            \"value\": false,\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"immutable\",\n            \"value\": true,\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"copyright\",\n            \"value\": \"\\\"This is a test set\\\"\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"compose\",\n            \"value\": \"{\\\"include\\\":[{\\\"system\\\":\\\"http://mauro_test/codesystem/mauro_codes2\\\",\\\"concept\\\":[{\\\"code\\\":\\\"B\\\",\\\"display\\\":\\\"Letter B..........\\\"}]}]}\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"Extraction Version\",\n            \"value\": \"17\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"Last Updated\",\n            \"value\": \"28/07/2020, 14:37:16\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        },\n        {\n            \"key\": \"Extraction Date\",\n            \"value\": \"21/08/2020, 12:12:14\",\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.terminologyintegration\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataTypes",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataTypes"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataType/show/ee97ab7d-375e-4d21-ae41-d1218b9ca45d"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 24 Aug 2020 11:48:59 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"ee97ab7d-375e-4d21-ae41-d1218b9ca45d\",\n    \"domainType\": \"EnumerationType\",\n    \"label\": \"Custom test - copy2\",\n    \"model\": \"ff2c356c-8748-4204-a9cd-17016f7dd6eb\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"ff2c356c-8748-4204-a9cd-17016f7dd6eb\",\n            \"label\": \"ea-reprehenderit-veritatis\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-24T11:48:55.723Z\",\n    \"enumerationValues\": [\n        {\n            \"index\": 0,\n            \"id\": \"afad6249-a05b-407d-a2f1-1561f57f48f0\",\n            \"key\": \"A\",\n            \"value\": \"Letter A..........\",\n            \"category\": null\n        },\n        {\n            \"index\": 1,\n            \"id\": \"0e4f2f69-50dc-4ebb-8ba5-fcbc52d930fa\",\n            \"key\": \"B\",\n            \"value\": \"Letter B..........\",\n            \"category\": null\n        }\n    ]\n}"
								},
								{
									"name": "Get Data Model Data Types - None",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataTypes",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataTypes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 10 Aug 2020 15:58:26 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 0,\n    \"items\": []\n}"
								},
								{
									"name": "Get Data Model Data Types",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"label\": \"{{$randomNoun}}\",\n    \"domainType\": \"PrimitiveType\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataTypes",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataTypes"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataType/show/895305cc-7cb9-4728-b9a6-947cd07c2d91"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 10 Aug 2020 15:59:50 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"895305cc-7cb9-4728-b9a6-947cd07c2d91\",\n    \"domainType\": \"PrimitiveType\",\n    \"label\": \"bus\",\n    \"model\": \"cce93898-a17a-4cad-925a-609d3202adc2\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"cce93898-a17a-4cad-925a-609d3202adc2\",\n            \"label\": \"perspiciatis-et-veritatis\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-10T15:59:48.693Z\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Data Elements",
					"item": [
						{
							"name": "List all Data Elements in Data Class",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses/{{data_class_id}}/dataElements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataClasses",
										"{{data_class_id}}",
										"dataElements"
									]
								}
							},
							"response": [
								{
									"name": "List all Data Elements in Data Class",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses/{{data_class_id}}/dataElements",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataClasses",
												"{{data_class_id}}",
												"dataElements"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 10:04:16 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 6,\n    \"items\": [\n        {\n            \"id\": \"3d212c82-5634-45a1-b250-0e2e49ad0ccb\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnE\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"label\": \"tableE\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"dataType\": {\n                \"id\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\",\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"string\",\n                \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"breadcrumbs\": [\n                    {\n                        \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                        \"label\": \"TargetFlowDataModel\",\n                        \"domainType\": \"DataModel\",\n                        \"finalised\": false\n                    }\n                ]\n            }\n        },\n        {\n            \"id\": \"5c835c0c-b53b-4d93-9def-7771a1185852\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnR\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"label\": \"tableE\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"dataType\": {\n                \"id\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\",\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"string\",\n                \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"breadcrumbs\": [\n                    {\n                        \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                        \"label\": \"TargetFlowDataModel\",\n                        \"domainType\": \"DataModel\",\n                        \"finalised\": false\n                    }\n                ]\n            }\n        },\n        {\n            \"id\": \"82633209-27f6-4507-a811-db9d70a0f90f\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnS\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"label\": \"tableE\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"dataType\": {\n                \"id\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\",\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"string\",\n                \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"breadcrumbs\": [\n                    {\n                        \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                        \"label\": \"TargetFlowDataModel\",\n                        \"domainType\": \"DataModel\",\n                        \"finalised\": false\n                    }\n                ]\n            }\n        },\n        {\n            \"id\": \"dd6c059a-e2aa-43cf-b190-72fc619620ac\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnT\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"label\": \"tableE\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"dataType\": {\n                \"id\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\",\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"string\",\n                \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"breadcrumbs\": [\n                    {\n                        \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                        \"label\": \"TargetFlowDataModel\",\n                        \"domainType\": \"DataModel\",\n                        \"finalised\": false\n                    }\n                ]\n            }\n        },\n        {\n            \"id\": \"95445e14-d9c6-4fb3-aaa3-f22e59e83558\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnU\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"label\": \"tableE\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"dataType\": {\n                \"id\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\",\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"string\",\n                \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"breadcrumbs\": [\n                    {\n                        \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                        \"label\": \"TargetFlowDataModel\",\n                        \"domainType\": \"DataModel\",\n                        \"finalised\": false\n                    }\n                ]\n            }\n        },\n        {\n            \"id\": \"bb190237-9da5-4953-ac3b-080e1b641906\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnV\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"label\": \"tableE\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"dataType\": {\n                \"id\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\",\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"string\",\n                \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"breadcrumbs\": [\n                    {\n                        \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                        \"label\": \"TargetFlowDataModel\",\n                        \"domainType\": \"DataModel\",\n                        \"finalised\": false\n                    }\n                ]\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Data Element by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses/{{data_class_id}}/dataElements/{{data_element_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataClasses",
										"{{data_class_id}}",
										"dataElements",
										"{{data_element_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Get Data Element by ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataClasses/{{data_class_id}}/dataElements/{{data_element_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataClasses",
												"{{data_class_id}}",
												"dataElements",
												"{{data_element_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 10:05:35 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"3d212c82-5634-45a1-b250-0e2e49ad0ccb\",\n    \"domainType\": \"DataElement\",\n    \"label\": \"columnE\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        },\n        {\n            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"label\": \"tableE\",\n            \"domainType\": \"DataClass\"\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T09:00:40.727Z\",\n    \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n    \"dataType\": {\n        \"id\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\",\n        \"domainType\": \"PrimitiveType\",\n        \"label\": \"string\",\n        \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n        \"breadcrumbs\": [\n            {\n                \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"label\": \"TargetFlowDataModel\",\n                \"domainType\": \"DataModel\",\n                \"finalised\": false\n            }\n        ]\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Summary Metadata",
					"item": [
						{
							"name": "Add Metadata",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example\",\n    \"description\": \"Value Distribution\",\n    \"summaryMetadataType\": \"MAP\",\n    \"summaryMetadataReports\": [\n        {\n            \"reportDate\": \"2020-01-29T07:31:57.519Z\",\n            \"reportValue\": \"{\\\"Female\\\":20562,\\\"Male\\\":17407,\\\"Unknown\\\":604}\"\n        },\n        {\n            \"reportDate\": \"2020-02-29T07:31:57.519Z\",\n            \"reportValue\": \"{\\\"Female\\\":19562,\\\"Male\\\":18407,\\\"Unknown\\\":704}\"\n        },\n        {\n            \"reportDate\": \"2020-03-29T07:31:57.519Z\",\n            \"reportValue\": \"{\\\"Female\\\":18562,\\\"Male\\\":19407,\\\"Unknown\\\":804}\"\n        },\n        {\n            \"reportDate\": \"2020-04-29T07:31:57.519Z\",\n            \"reportValue\": \"{\\\"Female\\\":17562,\\\"Male\\\":20407,\\\"Unknown\\\":904}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/summaryMetadata",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"summaryMetadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "List all Metadata items",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/summaryMetadata",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"summaryMetadata"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Attachments",
					"item": [
						{
							"name": "Add Attachment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fileName\": \"test3.txt\",\n    \"fileSize\": 5,\n    \"fileContents\": [104, 101, 108, 108, 111, 10],\n    \"fileType\": \"text/plain\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/referenceFiles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"referenceFiles"
									]
								},
								"description": "Add an attachment to a Data Model"
							},
							"response": [
								{
									"name": "Add Attachment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fileName\": \"test3.txt\",\n    \"fileSize\": 5,\n    \"fileContents\": [104, 101, 108, 108, 111, 10],\n    \"fileType\": \"text/plain\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/referenceFiles",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"referenceFiles"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/referenceFile/show/1388d756-843e-4131-a975-3077d189ea6e"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 19 Aug 2020 12:58:55 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1388d756-843e-4131-a975-3077d189ea6e\",\n    \"domainType\": \"ReferenceFile\",\n    \"lastUpdated\": \"2020-08-19T12:58:54.851Z\",\n    \"fileSize\": 6,\n    \"fileType\": \"text/plain\",\n    \"fileName\": \"test3.txt\",\n    \"fileContents\": [\n        104,\n        101,\n        108,\n        108,\n        111,\n        10\n    ]\n}"
								}
							]
						},
						{
							"name": "List all Attachments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/referenceFiles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"referenceFiles"
									]
								},
								"description": "Retrieve all attachments associated with a Data Model"
							},
							"response": [
								{
									"name": "List all Attachments - no attachements",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/referenceFiles",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"referenceFiles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 19 Aug 2020 12:58:50 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 0,\n    \"items\": []\n}"
								},
								{
									"name": "List all Attachments",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/referenceFiles",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"referenceFiles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 19 Aug 2020 12:59:26 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 1,\n    \"items\": [\n        {\n            \"id\": \"1388d756-843e-4131-a975-3077d189ea6e\",\n            \"domainType\": \"ReferenceFile\",\n            \"lastUpdated\": \"2020-08-19T12:58:54.851Z\",\n            \"fileSize\": 6,\n            \"fileType\": \"text/plain\",\n            \"fileName\": \"test3.txt\",\n            \"fileContents\": [\n                104,\n                101,\n                108,\n                108,\n                111,\n                10\n            ]\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "History",
					"item": [
						{
							"name": "List all History changes by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/edits",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"edits"
									]
								},
								"description": "List all changes made to a given Data Model"
							},
							"response": []
						}
					]
				},
				{
					"name": "Links",
					"item": [
						{
							"name": "List all Semantic Links",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/semanticLinks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"semanticLinks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Link",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"targetCatalogueItemDomainType\": \"DataModel\",\n    \"targetCatalogueItemId\" :  \"{{$randomUUID}}\",\n    \"linkType\": \"Refines\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/semanticLinks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"semanticLinks"
									]
								}
							},
							"response": [
								{
									"name": "Add Link",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetCatalogueItemDomainType\": \"DataModel\",\n    \"targetCatalogueItemId\" :  \"58dcc4eb-2e9a-4d43-b318-067a487518eb\",\n    \"linkType\": \"Refines\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/semanticLinks",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"semanticLinks"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/semanticLink/show/597a8276-eff4-4bc7-b41f-6a31d69de175"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 14:27:16 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"597a8276-eff4-4bc7-b41f-6a31d69de175\",\n    \"linkType\": \"Refines\",\n    \"domainType\": \"SemanticLink\",\n    \"sourceCatalogueItem\": {\n        \"id\": \"dccfd96a-bbfc-4af5-99b9-2080a3b76a1e\",\n        \"domainType\": \"DataModel\",\n        \"label\": \"rem-ut-quia\"\n    },\n    \"targetCatalogueItem\": {\n        \"id\": \"58dcc4eb-2e9a-4d43-b318-067a487518eb\",\n        \"domainType\": \"DataModel\",\n        \"label\": \"vel-iusto-ad\"\n    }\n}"
								},
								{
									"name": "Add Link - Unusable Link Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetCatalogueItemDomainType\": \"DataModel\",\n    \"targetCatalogueItemId\" :  \"{{$randomUUID}}\",\n    \"linkType\": \"Is From\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/semanticLinks",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"semanticLinks"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 14:23:48 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"total\": 1,\n    \"errors\": [\n        {\n            \"message\": \"Property [linkType] of class [class uk.ac.ox.softeng.maurodatamapper.core.facet.SemanticLink] with value [IS_FROM] cannot be used \"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Import / Export",
					"item": [
						{
							"name": "Get Data Model Importers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/providers/importers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"providers",
										"importers"
									]
								}
							},
							"response": [
								{
									"name": "Get Data Model Importers",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/providers/importers",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"providers",
												"importers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 11:53:07 GMT"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"name\": \"XmlImporterService\",\n        \"version\": \"3.0\",\n        \"displayName\": \"XML DataModel Importer\",\n        \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.importer\",\n        \"allowsExtraMetadataKeys\": true,\n        \"knownMetadataKeys\": [],\n        \"providerType\": \"DataModelImporter\",\n        \"paramClassType\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.importer.parameter.DataModelFileImporterProviderServiceParameters\",\n        \"canImportMultipleDomains\": true\n    },\n    {\n        \"name\": \"JsonImporterService\",\n        \"version\": \"2.0\",\n        \"displayName\": \"JSON DataModel Importer\",\n        \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.importer\",\n        \"allowsExtraMetadataKeys\": true,\n        \"knownMetadataKeys\": [],\n        \"providerType\": \"DataModelImporter\",\n        \"paramClassType\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.importer.parameter.DataModelFileImporterProviderServiceParameters\",\n        \"canImportMultipleDomains\": false\n    }\n]"
								}
							]
						},
						{
							"name": "Get Data Model Exporters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/providers/exporters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"providers",
										"exporters"
									]
								}
							},
							"response": [
								{
									"name": "Get Data Model Exporters",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/providers/exporters",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"providers",
												"exporters"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 11:46:23 GMT"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"name\": \"JsonExporterService\",\n        \"version\": \"2.0\",\n        \"displayName\": \"JSON DataModel Exporter\",\n        \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.exporter\",\n        \"allowsExtraMetadataKeys\": true,\n        \"knownMetadataKeys\": [],\n        \"providerType\": \"DataModelExporter\",\n        \"fileExtension\": \"json\",\n        \"fileType\": \"text/json\",\n        \"canExportMultipleDomains\": false\n    },\n    {\n        \"name\": \"XmlExporterService\",\n        \"version\": \"3.0\",\n        \"displayName\": \"XML DataModel Exporter\",\n        \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.exporter\",\n        \"allowsExtraMetadataKeys\": true,\n        \"knownMetadataKeys\": [],\n        \"providerType\": \"DataModelExporter\",\n        \"fileExtension\": \"xml\",\n        \"fileType\": \"text/xml\",\n        \"canExportMultipleDomains\": false\n    }\n]"
								}
							]
						},
						{
							"name": "Export Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/export/{{exporter_namespace}}/{{exporter_name}}/{{exporter_version}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"export",
										"{{exporter_namespace}}",
										"{{exporter_name}}",
										"{{exporter_version}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Export Data Models",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dataModelIds\": [\n        {{data_model_id}}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/dataModels/export/{{exporter_namespace}}/{{exporter_name}}/{{exporter_version}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"export",
										"{{exporter_namespace}}",
										"{{exporter_name}}",
										"{{exporter_version}}"
									]
								}
							},
							"response": [
								{
									"name": "JSON Export Data Models -1 model",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"dataModelIds\": [\n        {{data_model_id}}\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/dataModels/export/{{json_exporter_namespace}}/{{json_exporter_name}}/{{json_exporter_version}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"export",
												"{{json_exporter_namespace}}",
												"{{json_exporter_name}}",
												"{{json_exporter_version}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Disposition",
											"value": "attachment;filename=\"vel-iusto-ad.json\""
										},
										{
											"key": "Content-Type",
											"value": "text/json;charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 11 Aug 2020 14:40:24 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"dataModel\": {\n        \"id\": \"58dcc4eb-2e9a-4d43-b318-067a487518eb\",\n        \"label\": \"vel-iusto-ad\",\n        \"description\": \"Quia voluptatum reiciendis minima qui. Sed nihil debitis in molestias qui et voluptatibus soluta. Ea dolores rerum sunt optio qui dolores quas. Veniam beatae ea et aperiam unde totam voluptas est. Illo eos ut incidunt.\\n \\rNon ratione quis. Maxime praesentium voluptatem quia reiciendis quas. Est qui culpa. Omnis accusamus vero est. Dolores omnis eaque voluptas aut dolores nemo fugit impedit. Consequatur officiis dolor qui animi qui consequatur.\\n \\rMollitia occaecati est qui dolorem libero eos consectetur. Ab quia ad corporis quidem laboriosam minima ut cum autem. Similique quia dolores voluptas quo voluptatum accusantium earum consequuntur et. Molestias dicta vitae.\",\n        \"lastUpdated\": \"2020-08-05T13:46:10.161Z\",\n        \"type\": \"DATA_ASSET\",\n        \"documentationVersion\": \"1.0.0\",\n        \"finalised\": false\n    },\n    \"exportMetadata\": {\n        \"exportedBy\": \"Admin User\",\n        \"exportedOn\": \"2020-08-11T14:40:21.652Z\",\n        \"exporter\": {\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.exporter\",\n            \"name\": \"JsonExporterService\",\n            \"version\": \"2.0\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Import Data Model",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "importFile",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "importAsNewDocumentationVersion",
											"value": "false",
											"type": "text"
										},
										{
											"key": "finalised",
											"value": "true",
											"type": "text"
										},
										{
											"key": "folderId",
											"value": "{{folder_id}}",
											"type": "text"
										},
										{
											"key": "importAsNewBranchModelVersion",
											"value": "true",
											"type": "text"
										},
										{
											"key": "databaseUsername",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "databasePassword",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "domain",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "authenticationScheme",
											"value": "NTLM",
											"type": "text",
											"disabled": true
										},
										{
											"key": "integratedSecurity",
											"value": "true",
											"type": "text",
											"disabled": true
										},
										{
											"key": "databaseSSL",
											"value": "false",
											"type": "text",
											"disabled": true
										},
										{
											"key": "databaseHost",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "schemaNames",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "dataModelNameSuffix",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "databaseNames",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "newBranchName",
											"value": "test",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/dataModels/import/{{importer_namespace}}/{{importer_name}}/{{importer_version}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"import",
										"{{importer_namespace}}",
										"{{importer_name}}",
										"{{importer_version}}"
									]
								}
							},
							"response": [
								{
									"name": "JSON Export Data Models -1 model",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"dataModelIds\": [\n        {{data_model_id}}\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/dataModels/export/{{json_exporter_namespace}}/{{json_exporter_name}}/{{json_exporter_version}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"export",
												"{{json_exporter_namespace}}",
												"{{json_exporter_name}}",
												"{{json_exporter_version}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Disposition",
											"value": "attachment;filename=\"vel-iusto-ad.json\""
										},
										{
											"key": "Content-Type",
											"value": "text/json;charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 11 Aug 2020 14:40:24 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"dataModel\": {\n        \"id\": \"58dcc4eb-2e9a-4d43-b318-067a487518eb\",\n        \"label\": \"vel-iusto-ad\",\n        \"description\": \"Quia voluptatum reiciendis minima qui. Sed nihil debitis in molestias qui et voluptatibus soluta. Ea dolores rerum sunt optio qui dolores quas. Veniam beatae ea et aperiam unde totam voluptas est. Illo eos ut incidunt.\\n \\rNon ratione quis. Maxime praesentium voluptatem quia reiciendis quas. Est qui culpa. Omnis accusamus vero est. Dolores omnis eaque voluptas aut dolores nemo fugit impedit. Consequatur officiis dolor qui animi qui consequatur.\\n \\rMollitia occaecati est qui dolorem libero eos consectetur. Ab quia ad corporis quidem laboriosam minima ut cum autem. Similique quia dolores voluptas quo voluptatum accusantium earum consequuntur et. Molestias dicta vitae.\",\n        \"lastUpdated\": \"2020-08-05T13:46:10.161Z\",\n        \"type\": \"DATA_ASSET\",\n        \"documentationVersion\": \"1.0.0\",\n        \"finalised\": false\n    },\n    \"exportMetadata\": {\n        \"exportedBy\": \"Admin User\",\n        \"exportedOn\": \"2020-08-11T14:40:21.652Z\",\n        \"exporter\": {\n            \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.exporter\",\n            \"name\": \"JsonExporterService\",\n            \"version\": \"2.0\"\n        }\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Permissions",
					"item": [
						{
							"name": "List group roles for a datamodel",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/groupRoles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"groupRoles"
									]
								},
								"description": "Lists the group roles which are available to be assigned to the securable resource"
							},
							"response": [
								{
									"name": "List group roles for securable resource",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/folders/{{folder_id}}/groupRoles",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"folders",
												"{{folder_id}}",
												"groupRoles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 11:37:49 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 6,\n    \"items\": [\n        {\n            \"id\": \"ffebc3af-f0c5-408b-b1c8-1508d067be47\",\n            \"name\": \"container_admin\",\n            \"displayName\": \"Container Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": false,\n            \"parent\": \"eae76d34-d520-4369-8f03-f4fcc0b8b61e\"\n        },\n        {\n            \"id\": \"2f8c23f3-8c0e-4920-8af7-505d8007c25b\",\n            \"name\": \"container_group_admin\",\n            \"displayName\": \"Container Group Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"f686a892-8bcf-4bc8-82b3-208b174cd2e5\"\n        },\n        {\n            \"id\": \"f28580b5-97fe-4a02-bfd0-67f300eeeed5\",\n            \"name\": \"editor\",\n            \"displayName\": \"Editor\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": false,\n            \"parent\": \"ffebc3af-f0c5-408b-b1c8-1508d067be47\"\n        },\n        {\n            \"id\": \"8abca3f4-cdc3-451b-99f5-f548661dd1d3\",\n            \"name\": \"author\",\n            \"displayName\": \"Author\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": false,\n            \"parent\": \"f28580b5-97fe-4a02-bfd0-67f300eeeed5\"\n        },\n        {\n            \"id\": \"471d719a-dd51-4e45-a539-4e4d1e62a89b\",\n            \"name\": \"reviewer\",\n            \"displayName\": \"Reviewer\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": false,\n            \"parent\": \"8abca3f4-cdc3-451b-99f5-f548661dd1d3\"\n        },\n        {\n            \"id\": \"c7e04a3b-88c3-434f-80f2-2e8d82bfd4cd\",\n            \"name\": \"reader\",\n            \"displayName\": \"Reader\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": false,\n            \"parent\": \"471d719a-dd51-4e45-a539-4e4d1e62a89b\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "List securable group roles for a datamodel",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/securableResourceGroupRoles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"securableResourceGroupRoles"
									]
								},
								"description": "Lists the group roles which are available to be assigned to the securable resource"
							},
							"response": []
						},
						{
							"name": "Set readable by everyone",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/readByEveryone",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"readByEveryone"
									]
								}
							},
							"response": [
								{
									"name": "Set readable by everyone",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/readByEveryone",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"readByEveryone"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/api/dataModels/03e7059c-b8c5-42e9-bc20-505076599826"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 12:00:05 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"03e7059c-b8c5-42e9-bc20-505076599826\",\n    \"domainType\": \"DataModel\",\n    \"label\": \"Complex Test DataModel\",\n    \"description\": \"sed dolor est\",\n    \"availableActions\": [\n        \"delete\",\n        \"softDelete\",\n        \"update\",\n        \"save\",\n        \"show\",\n        \"comment\",\n        \"editDescription\"\n    ],\n    \"lastUpdated\": \"2020-07-29T12:00:05.252Z\",\n    \"classifiers\": [\n        {\n            \"id\": \"605aa52b-5371-4dec-a06e-7beebc6e80c8\",\n            \"label\": \"test classifier\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.85Z\"\n        },\n        {\n            \"id\": \"61b6e03a-d81f-4108-9404-3e7814b59fce\",\n            \"label\": \"test classifier2\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.853Z\"\n        }\n    ],\n    \"type\": \"Data Standard\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": false,\n    \"readableByEveryone\": true,\n    \"readableByAuthenticatedUsers\": false,\n    \"author\": \"Clovis Padberg Sr.\",\n    \"organisation\": \"Wintheiser Group\"\n}"
								}
							]
						},
						{
							"name": "Remove readable by everyone",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/readByEveryone",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"readByEveryone"
									]
								}
							},
							"response": [
								{
									"name": "Remove readable by everyone",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/readByEveryone",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"readByEveryone"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/api/dataModels/03e7059c-b8c5-42e9-bc20-505076599826"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 12:00:35 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"03e7059c-b8c5-42e9-bc20-505076599826\",\n    \"domainType\": \"DataModel\",\n    \"label\": \"Complex Test DataModel\",\n    \"description\": \"sed dolor est\",\n    \"availableActions\": [\n        \"delete\",\n        \"softDelete\",\n        \"update\",\n        \"save\",\n        \"show\",\n        \"comment\",\n        \"editDescription\"\n    ],\n    \"lastUpdated\": \"2020-07-29T12:00:35.735Z\",\n    \"classifiers\": [\n        {\n            \"id\": \"61b6e03a-d81f-4108-9404-3e7814b59fce\",\n            \"label\": \"test classifier2\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.853Z\"\n        },\n        {\n            \"id\": \"605aa52b-5371-4dec-a06e-7beebc6e80c8\",\n            \"label\": \"test classifier\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.85Z\"\n        }\n    ],\n    \"type\": \"Data Standard\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"author\": \"Clovis Padberg Sr.\",\n    \"organisation\": \"Wintheiser Group\"\n}"
								}
							]
						},
						{
							"name": "Set readable by authenticated users",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/readByAuthenticated",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"readByAuthenticated"
									]
								}
							},
							"response": [
								{
									"name": "Set readable by authenticated users",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/readByAuthenticated",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"readByAuthenticated"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/api/dataModels/03e7059c-b8c5-42e9-bc20-505076599826"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 12:01:35 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"03e7059c-b8c5-42e9-bc20-505076599826\",\n    \"domainType\": \"DataModel\",\n    \"label\": \"Complex Test DataModel\",\n    \"description\": \"sed dolor est\",\n    \"availableActions\": [\n        \"delete\",\n        \"softDelete\",\n        \"update\",\n        \"save\",\n        \"show\",\n        \"comment\",\n        \"editDescription\"\n    ],\n    \"lastUpdated\": \"2020-07-29T12:01:35.735Z\",\n    \"classifiers\": [\n        {\n            \"id\": \"605aa52b-5371-4dec-a06e-7beebc6e80c8\",\n            \"label\": \"test classifier\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.85Z\"\n        },\n        {\n            \"id\": \"61b6e03a-d81f-4108-9404-3e7814b59fce\",\n            \"label\": \"test classifier2\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.853Z\"\n        }\n    ],\n    \"type\": \"Data Standard\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": true,\n    \"author\": \"Clovis Padberg Sr.\",\n    \"organisation\": \"Wintheiser Group\"\n}"
								}
							]
						},
						{
							"name": "Remove readable by authenticated users",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/readByAuthenticated",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"readByAuthenticated"
									]
								}
							},
							"response": [
								{
									"name": "Remove readable by authenticated users",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/readByAuthenticated",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"readByAuthenticated"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/api/dataModels/03e7059c-b8c5-42e9-bc20-505076599826"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 12:01:21 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"03e7059c-b8c5-42e9-bc20-505076599826\",\n    \"domainType\": \"DataModel\",\n    \"label\": \"Complex Test DataModel\",\n    \"description\": \"sed dolor est\",\n    \"availableActions\": [\n        \"delete\",\n        \"softDelete\",\n        \"update\",\n        \"save\",\n        \"show\",\n        \"comment\",\n        \"editDescription\"\n    ],\n    \"lastUpdated\": \"2020-07-29T12:00:35.735Z\",\n    \"classifiers\": [\n        {\n            \"id\": \"605aa52b-5371-4dec-a06e-7beebc6e80c8\",\n            \"label\": \"test classifier\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.85Z\"\n        },\n        {\n            \"id\": \"61b6e03a-d81f-4108-9404-3e7814b59fce\",\n            \"label\": \"test classifier2\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.853Z\"\n        }\n    ],\n    \"type\": \"Data Standard\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"author\": \"Clovis Padberg Sr.\",\n    \"organisation\": \"Wintheiser Group\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Facets",
					"item": [
						{
							"name": "List all metadata",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/metadata",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new metadata",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"namespace\": \"{{$randomNoun}}.{{$randomNoun}}.{{$randomNoun}}\",\n    \"key\": \"{{$randomNoun}}\",\n    \"value\": \"{{$randomPhrase}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/metadata",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Metadata by ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/metadata/{{metadata_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"metadata",
										"{{metadata_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Annotation by ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/annotations/{{annotation_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"annotations",
										"{{annotation_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Rule by ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/rules/{{rule_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"rules",
										"{{rule_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List all annotations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/annotations",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"annotations"
									]
								}
							},
							"response": []
						},
						{
							"name": "List all rules",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/rules",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"rules"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List all Data Models",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels"
							]
						},
						"description": "This is a generic endpoint that will list all the datamodels in the system.\nIts more likely the list all datamodels by folder id is a more useful endpoint."
					},
					"response": [
						{
							"name": "List all Data Models",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:43:46 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 2,\n    \"items\": [\n        {\n            \"id\": \"03e7059c-b8c5-42e9-bc20-505076599826\",\n            \"domainType\": \"DataModel\",\n            \"label\": \"Complex Test DataModel\",\n            \"type\": \"Data Standard\",\n            \"classifiers\": [\n                {\n                    \"id\": \"605aa52b-5371-4dec-a06e-7beebc6e80c8\",\n                    \"label\": \"test classifier\",\n                    \"lastUpdated\": \"2020-07-28T10:45:07.85Z\"\n                },\n                {\n                    \"id\": \"61b6e03a-d81f-4108-9404-3e7814b59fce\",\n                    \"label\": \"test classifier2\",\n                    \"lastUpdated\": \"2020-07-28T10:45:07.853Z\"\n                }\n            ],\n            \"author\": \"admin person\",\n            \"organisation\": \"brc\"\n        },\n        {\n            \"id\": \"9ee42521-5ae1-4974-b9cb-ead70892c9d4\",\n            \"domainType\": \"DataModel\",\n            \"label\": \"Simple Test DataModel\",\n            \"type\": \"Data Standard\",\n            \"classifiers\": [\n                {\n                    \"id\": \"b6574050-8ea0-4f04-9c48-bc5194130d82\",\n                    \"label\": \"test classifier simple\",\n                    \"lastUpdated\": \"2020-07-28T10:45:10.267Z\"\n                }\n            ]\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List all Data Models in Folder",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}/dataModels",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}",
								"dataModels"
							]
						}
					},
					"response": [
						{
							"name": "List all Data Models in Folder - Folder not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/dataModels",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"dataModels"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 31 Jul 2020 14:48:07 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"path\": \"/api/folders/6f319a88-86ab-4537-8c83-f0132d2dc503/dataModels\",\n    \"resource\": \"Folder\",\n    \"id\": \"6f319a88-86ab-4537-8c83-f0132d2dc503\"\n}"
						},
						{
							"name": "List all Data Models in Folder",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/dataModels",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"dataModels"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:46:07 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 2,\n    \"items\": [\n        {\n            \"id\": \"03e7059c-b8c5-42e9-bc20-505076599826\",\n            \"domainType\": \"DataModel\",\n            \"label\": \"Complex Test DataModel\",\n            \"type\": \"Data Standard\",\n            \"classifiers\": [\n                {\n                    \"id\": \"605aa52b-5371-4dec-a06e-7beebc6e80c8\",\n                    \"label\": \"test classifier\",\n                    \"lastUpdated\": \"2020-07-28T10:45:07.85Z\"\n                },\n                {\n                    \"id\": \"61b6e03a-d81f-4108-9404-3e7814b59fce\",\n                    \"label\": \"test classifier2\",\n                    \"lastUpdated\": \"2020-07-28T10:45:07.853Z\"\n                }\n            ],\n            \"author\": \"admin person\",\n            \"organisation\": \"brc\"\n        },\n        {\n            \"id\": \"9ee42521-5ae1-4974-b9cb-ead70892c9d4\",\n            \"domainType\": \"DataModel\",\n            \"label\": \"Simple Test DataModel\",\n            \"type\": \"Data Standard\",\n            \"classifiers\": [\n                {\n                    \"id\": \"b6574050-8ea0-4f04-9c48-bc5194130d82\",\n                    \"label\": \"test classifier simple\",\n                    \"lastUpdated\": \"2020-07-28T10:45:10.267Z\"\n                }\n            ]\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Data Model by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get Data Model by ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:44:12 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"03e7059c-b8c5-42e9-bc20-505076599826\",\n    \"domainType\": \"DataModel\",\n    \"label\": \"Complex Test DataModel\",\n    \"availableActions\": [\n        \"delete\",\n        \"softDelete\",\n        \"update\",\n        \"save\",\n        \"show\",\n        \"comment\",\n        \"editDescription\"\n    ],\n    \"lastUpdated\": \"2020-07-28T10:45:11.922Z\",\n    \"classifiers\": [\n        {\n            \"id\": \"61b6e03a-d81f-4108-9404-3e7814b59fce\",\n            \"label\": \"test classifier2\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.853Z\"\n        },\n        {\n            \"id\": \"605aa52b-5371-4dec-a06e-7beebc6e80c8\",\n            \"label\": \"test classifier\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.85Z\"\n        }\n    ],\n    \"type\": \"Data Standard\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"author\": \"admin person\",\n    \"organisation\": \"brc\"\n}"
						}
					]
				},
				{
					"name": "Finalise Data Model",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"versionChangeType\": \"major\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}/finalise",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}",
								"finalise"
							]
						}
					},
					"response": [
						{
							"name": "Finalise Data Model",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/finalise",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"finalise"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/dataModels/c0c2dadd-d090-42c9-a365-804f333a2864"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 10 Aug 2020 15:56:20 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"c0c2dadd-d090-42c9-a365-804f333a2864\",\n    \"domainType\": \"DataModel\",\n    \"label\": \"rerum-nulla-officiis\",\n    \"description\": \"Perferendis dolorem laudantium. Sequi quam aut harum voluptatem saepe qui quis iste atque. Debitis eligendi neque qui exercitationem at.\\n \\rModi perspiciatis nobis culpa tempore rerum et ut. Est autem reiciendis et. Consectetur autem quasi.\\n \\rIpsum molestiae cumque vero saepe porro. Voluptatibus ea omnis assumenda maxime repudiandae recusandae suscipit quo ut. Est eum quis est ducimus voluptate repudiandae. Placeat voluptatibus eum qui nisi aliquid tempore.\",\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"softDelete\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-10T15:56:19.834Z\",\n    \"type\": \"Data Standard\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": true,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"dateFinalised\": \"2020-08-10T15:56:19.746Z\"\n}"
						}
					]
				},
				{
					"name": "Branch Data Model",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"branchName\": \"testing\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}/newBranchModelVersion",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}",
								"newBranchModelVersion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Data Model by ID",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"{{$randomLoremWords}}\",\n    \"author\":\"{{$randomFullName}}\",\n    \"organisation\": \"{{$randomCompanyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Edit Data Model by ID",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\":\"{{$randomLoremWords}}\",\n    \"author\":\"{{$randomFullName}}\",\n    \"organisation\": \"{{$randomCompanyName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/dataModels/03e7059c-b8c5-42e9-bc20-505076599826"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:57:33 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"03e7059c-b8c5-42e9-bc20-505076599826\",\n    \"domainType\": \"DataModel\",\n    \"label\": \"Complex Test DataModel\",\n    \"description\": \"sed dolor est\",\n    \"availableActions\": [\n        \"delete\",\n        \"softDelete\",\n        \"update\",\n        \"save\",\n        \"show\",\n        \"comment\",\n        \"editDescription\"\n    ],\n    \"lastUpdated\": \"2020-07-29T11:57:33.804Z\",\n    \"classifiers\": [\n        {\n            \"id\": \"605aa52b-5371-4dec-a06e-7beebc6e80c8\",\n            \"label\": \"test classifier\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.85Z\"\n        },\n        {\n            \"id\": \"61b6e03a-d81f-4108-9404-3e7814b59fce\",\n            \"label\": \"test classifier2\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.853Z\"\n        }\n    ],\n    \"type\": \"Data Standard\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"author\": \"Clovis Padberg Sr.\",\n    \"organisation\": \"Wintheiser Group\"\n}"
						}
					]
				},
				{
					"name": "Get Data Model Types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/types",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"types"
							]
						}
					},
					"response": [
						{
							"name": "Get Data Model Types",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/types",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"types"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:44:31 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    \"Data Asset\",\n    \"Data Standard\"\n]"
						}
					]
				},
				{
					"name": "Get Data Model Hierarchy (Diagram tab)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}/hierarchy",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}",
								"hierarchy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Diff Data Models",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}/diff/{{compare_data_model_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}",
								"diff",
								"{{compare_data_model_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Soft Delete Data Model by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}?permanent=false",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}"
							],
							"query": [
								{
									"key": "permanent",
									"value": "false"
								}
							]
						}
					},
					"response": [
						{
							"name": "Soft Delete Data Model by ID",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}?permanent=false",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}"
									],
									"query": [
										{
											"key": "permanent",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/dataModels/03e7059c-b8c5-42e9-bc20-505076599826"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:54:23 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"03e7059c-b8c5-42e9-bc20-505076599826\",\n    \"domainType\": \"DataModel\",\n    \"label\": \"Complex Test DataModel\",\n    \"availableActions\": [\n        \"delete\",\n        \"softDelete\",\n        \"update\",\n        \"save\",\n        \"show\",\n        \"comment\",\n        \"editDescription\"\n    ],\n    \"lastUpdated\": \"2020-07-29T11:54:23.81Z\",\n    \"classifiers\": [\n        {\n            \"id\": \"605aa52b-5371-4dec-a06e-7beebc6e80c8\",\n            \"label\": \"test classifier\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.85Z\"\n        },\n        {\n            \"id\": \"61b6e03a-d81f-4108-9404-3e7814b59fce\",\n            \"label\": \"test classifier2\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.853Z\"\n        }\n    ],\n    \"type\": \"Data Standard\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"deleted\": true,\n    \"author\": \"admin person\",\n    \"organisation\": \"brc\"\n}"
						}
					]
				},
				{
					"name": "Permanent Delete Data Model by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/{{$randomUUID}}?permanent=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{$randomUUID}}"
							],
							"query": [
								{
									"key": "permanent",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Permanent Delete Data Model by Not Found ID",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{$randomUUID}}?permanent=true",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{$randomUUID}}"
									],
									"query": [
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 12:05:03 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"path\": \"/api/dataModels/a3beabbc-2fd5-4958-8dcc-ff79954c2fe2\",\n    \"resource\": \"DataModel\",\n    \"id\": \"a3beabbc-2fd5-4958-8dcc-ff79954c2fe2\"\n}"
						}
					]
				},
				{
					"name": "Default Data Type Providers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/providers/defaultDataTypeProviders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"providers",
								"defaultDataTypeProviders"
							]
						}
					},
					"response": [
						{
							"name": "Default Data Type Providers",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/providers/defaultDataTypeProviders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"providers",
										"defaultDataTypeProviders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:45:26 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"name\": \"DataTypeService\",\n        \"version\": \"1.0.0\",\n        \"displayName\": \"Basic Default DataTypes\",\n        \"dataTypes\": [\n            {\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"Text\",\n                \"description\": \"A piece of text\"\n            },\n            {\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"Number\",\n                \"description\": \"A whole number\"\n            },\n            {\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"Decimal\",\n                \"description\": \"A decimal number\"\n            },\n            {\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"Date\",\n                \"description\": \"A date\"\n            },\n            {\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"DateTime\",\n                \"description\": \"A date with a timestamp\"\n            },\n            {\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"Timestamp\",\n                \"description\": \"A timestamp\"\n            },\n            {\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"Boolean\",\n                \"description\": \"A true or false value\"\n            },\n            {\n                \"domainType\": \"PrimitiveType\",\n                \"label\": \"Duration\",\n                \"description\": \"A time period in arbitrary units\"\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Create new DataModel",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\",\n    \"description\": \"{{$randomLoremText}}\",\n    \"modelType\": \"DATA_STANDARD\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}/dataModels",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}",
								"dataModels"
							]
						}
					},
					"response": [
						{
							"name": "Create new DataModel - Data Asset",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\",\n    \"description\": \"{{$randomLoremText}}\",\n    \"modelType\": \"DATA_ASSET\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/dataModels",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"dataModels"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/dataModels/88d69a59-4404-43a9-afd3-5dc106340b9c"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 13:44:44 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"88d69a59-4404-43a9-afd3-5dc106340b9c\",\n    \"domainType\": \"DataModel\",\n    \"label\": \"in-modi-distinctio\",\n    \"description\": \"Libero illo consequuntur recusandae.\",\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"softDelete\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T13:44:44.51Z\",\n    \"type\": \"DATA_ASSET\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false\n}"
						},
						{
							"name": "Create new DataModel - Data Standard",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\",\n    \"description\": \"{{$randomLoremText}}\",\n    \"modelType\": \"DATA_STANDARD\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/dataModels",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"dataModels"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/dataModels/cce93898-a17a-4cad-925a-609d3202adc2"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 13:44:24 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"cce93898-a17a-4cad-925a-609d3202adc2\",\n    \"domainType\": \"DataModel\",\n    \"label\": \"perspiciatis-et-veritatis\",\n    \"description\": \"Eveniet in assumenda aut. Blanditiis temporibus nihil qui officiis modi amet a dolor. Laborum laudantium esse quidem eveniet.\\n \\rNeque saepe molestiae est id. Ea accusamus porro velit corrupti dolore vel ipsum. Omnis voluptates laboriosam ipsum eius ullam architecto eos eligendi nam. Est repellendus est iste quae laborum.\\n \\rQuidem amet et perferendis quo explicabo facere sed nulla. Neque voluptates dolores. Aut ducimus voluptates velit nesciunt sed temporibus similique aut. Vitae at ut soluta. Nemo sit aliquam consectetur qui doloribus laboriosam consectetur ut sit. Aut natus nostrum consequatur qui consectetur fuga perspiciatis.\",\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"softDelete\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T13:44:24.259Z\",\n    \"type\": \"DATA_STANDARD\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false\n}"
						}
					]
				}
			]
		},
		{
			"name": "Classifiers",
			"item": [
				{
					"name": "List all Classifiers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/classifiers/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"classifiers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Classifier Details by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/classifiers/{{classifier_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"classifiers",
								"{{classifier_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Classifier's children by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/classifiers/{{classifier_id}}/classifiers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"classifiers",
								"{{classifier_id}}",
								"classifiers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Classifier Details",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\": \"Label name\",\n    \"description\": \"Your description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/classifiers/{{classifier_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"classifiers",
								"{{classifier_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Terminology",
			"item": [
				{
					"name": "History",
					"item": [
						{
							"name": "List all History changes by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/terminologies/{{terminology_id}}/edits",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"terminologies",
										"{{terminology_id}}",
										"edits"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Import / Export",
					"item": [
						{
							"name": "Get Terminology Importers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/terminologies/providers/importers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"terminologies",
										"providers",
										"importers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Terminology Exporters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/terminologies/providers/exporters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"terminologies",
										"providers",
										"exporters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Export Terminology",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/terminologies/{{data_model_id}}/export/{{exporter_namespace}}/{{exporter_name}}/{{exporter_version}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"terminologies",
										"{{data_model_id}}",
										"export",
										"{{exporter_namespace}}",
										"{{exporter_name}}",
										"{{exporter_version}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Export Terminologies",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dataModelIds\": [\n        {{data_model_id}}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/terminologies/export/{{exporter_namespace}}/{{exporter_name}}/{{exporter_version}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"terminologies",
										"export",
										"{{exporter_namespace}}",
										"{{exporter_name}}",
										"{{exporter_version}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Import Terminologies",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "importFile",
											"type": "file",
											"src": "/Users/oliverfreeman/Downloads/ddcore.json"
										},
										{
											"key": "importAsNewDocumentationVersion",
											"value": "false",
											"type": "text"
										},
										{
											"key": "finalised",
											"value": "false",
											"type": "text"
										},
										{
											"key": "folderId",
											"value": "{{folder_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/terminologies/import/{{importer_namespace}}/{{importer_name}}/{{importer_version}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"terminologies",
										"import",
										"{{importer_namespace}}",
										"{{importer_name}}",
										"{{importer_version}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List terminologies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/terminologies",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"terminologies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Terminology by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/terminologies/{{terminology_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"terminologies",
								"{{terminology_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Finalise Terminology",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/terminologies/{{terminology_id_to_finalise}}/finalise",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"terminologies",
								"{{terminology_id_to_finalise}}",
								"finalise"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Terminology (New Model Version)",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\": \"A new Terminology\",\n    \"copyPermissions\": false,\n    \"copyDataFlows\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/terminologies/{{terminology_id_to_finalise}}/newModelVersion",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"terminologies",
								"{{terminology_id_to_finalise}}",
								"newModelVersion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Permanent Delete Terminology by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/terminologies/{{$randomUUID}}?permanent=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"terminologies",
								"{{$randomUUID}}"
							],
							"query": [
								{
									"key": "permanent",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Permanent Delete Data Model by Not Found ID",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{$randomUUID}}?permanent=true",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{$randomUUID}}"
									],
									"query": [
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 12:05:03 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"path\": \"/api/dataModels/a3beabbc-2fd5-4958-8dcc-ff79954c2fe2\",\n    \"resource\": \"DataModel\",\n    \"id\": \"a3beabbc-2fd5-4958-8dcc-ff79954c2fe2\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "CodeSets",
			"item": [
				{
					"name": "List all CodeSets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/codeSets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"codeSets"
							]
						}
					},
					"response": [
						{
							"name": "List all CodeSets",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/codeSets",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"codeSets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 11 Aug 2020 09:24:26 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 1,\n    \"items\": [\n        {\n            \"id\": \"5b3a3549-41ea-423a-a4d3-3224165addc8\",\n            \"domainType\": \"CodeSet\",\n            \"label\": \"Simple Test CodeSet\",\n            \"classifiers\": [\n                {\n                    \"id\": \"33a4f465-1a25-45e8-865c-36f64d68d960\",\n                    \"label\": \"test classifier\",\n                    \"lastUpdated\": \"2020-08-05T09:00:42.175Z\"\n                }\n            ],\n            \"author\": \"Test Bootstrap\",\n            \"organisation\": \"Oxford BRC\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List all CodeSets in Folder",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}/codeSets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}",
								"codeSets"
							]
						}
					},
					"response": [
						{
							"name": "List all CodeSets in Folder - None",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/codeSets",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"codeSets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 11 Aug 2020 09:24:11 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 0,\n    \"items\": []\n}"
						}
					]
				},
				{
					"name": "Get CodeSet by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/codeSets/{{code_set_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"codeSets",
								"{{code_set_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get CodeSet by ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/codeSets/{{code_set_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"codeSets",
										"{{code_set_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 11 Aug 2020 09:24:54 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"5b3a3549-41ea-423a-a4d3-3224165addc8\",\n    \"domainType\": \"CodeSet\",\n    \"label\": \"Simple Test CodeSet\",\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"softDelete\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T09:00:45.54Z\",\n    \"classifiers\": [\n        {\n            \"id\": \"33a4f465-1a25-45e8-865c-36f64d68d960\",\n            \"label\": \"test classifier\",\n            \"lastUpdated\": \"2020-08-05T09:00:42.175Z\"\n        }\n    ],\n    \"type\": \"CodeSet\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": true,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"dateFinalised\": \"2020-08-05T09:00:45.499Z\",\n    \"author\": \"Test Bootstrap\",\n    \"organisation\": \"Oxford BRC\"\n}"
						}
					]
				},
				{
					"name": "Create new CodeSet Model Version (Fork)",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\": \"{{$randomLoremSlug}}\",\n    \"copyPermissions\": false,\n    \"copyDataFlows\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/codeSets/{{code_set_id}}/newModelVersion",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"codeSets",
								"{{code_set_id}}",
								"newModelVersion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new CodeSet Documentation Version",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"moveDataFlows\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/codeSets/{{code_set_id}}/newDocumentationVersion",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"codeSets",
								"{{code_set_id}}",
								"newDocumentationVersion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Finalise CodeSet",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/codeSets/{{code_set_id}}/finalise",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"codeSets",
								"{{code_set_id}}",
								"finalise"
							]
						}
					},
					"response": [
						{
							"name": "Finalise CodeSet",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/codeSets/{{code_set_id}}/finalise",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"codeSets",
										"{{code_set_id}}",
										"finalise"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/codeSets/eba9cd92-224b-4436-a8a9-429d373ca724"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 11 Aug 2020 14:32:34 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"eba9cd92-224b-4436-a8a9-429d373ca724\",\n    \"domainType\": \"CodeSet\",\n    \"label\": \"itaque-velit-et\",\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"softDelete\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-11T14:32:33.447Z\",\n    \"classifiers\": [\n        {\n            \"id\": \"33a4f465-1a25-45e8-865c-36f64d68d960\",\n            \"label\": \"test classifier\",\n            \"lastUpdated\": \"2020-08-05T09:00:42.175Z\"\n        }\n    ],\n    \"type\": \"CodeSet\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": true,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"dateFinalised\": \"2020-08-11T14:32:33.425Z\",\n    \"author\": \"Test Bootstrap\",\n    \"organisation\": \"Oxford BRC\"\n}"
						},
						{
							"name": "Finalise CodeSet - Action not allowed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/codeSets/{{code_set_id}}/finalise",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"codeSets",
										"{{code_set_id}}",
										"finalise"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 11 Aug 2020 14:32:40 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"path\": \"/api/codeSets/eba9cd92-224b-4436-a8a9-429d373ca724/finalise\",\n    \"additional\": \"User does not have the necessary permissions\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Folders",
			"item": [
				{
					"name": "Get all folders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/folders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders"
							]
						}
					},
					"response": [
						{
							"name": "Get all folders",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:28:16 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 1,\n    \"items\": [\n        {\n            \"id\": \"6f319a88-86ab-4537-8c83-f0132d2dc503\",\n            \"label\": \"Development Folder\",\n            \"lastUpdated\": \"2020-07-28T10:45:07.576Z\",\n            \"domainType\": \"Folder\",\n            \"hasChildFolders\": false\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get folder by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get folder by ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:29:04 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"6f319a88-86ab-4537-8c83-f0132d2dc503\",\n    \"label\": \"Development Folder\",\n    \"lastUpdated\": \"2020-07-28T10:45:07.576Z\",\n    \"domainType\": \"Folder\",\n    \"hasChildFolders\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"availableActions\": [\n        \"update\",\n        \"delete\",\n        \"show\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Create new folder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\",\n    \"description\": \"{{$randomLoremText}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/folders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders"
							]
						}
					},
					"response": [
						{
							"name": "Create new folder - Label already exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"nemo-voluptas-vero\",\n    \"description\": \"{{$randomLoremText}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 31 Jul 2020 14:46:50 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 1,\n    \"errors\": [\n        {\n            \"message\": \"Property [label] of class [class uk.ac.ox.softeng.maurodatamapper.core.container.Folder] with value [nemo-voluptas-vero] must be unique\"\n        }\n    ]\n}"
						},
						{
							"name": "Create new folder with no description",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/folders/651084dd-91db-475e-a061-b04e9f3823eb"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 12:07:31 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"651084dd-91db-475e-a061-b04e9f3823eb\",\n    \"label\": \"praesentium-voluptatum-laborum\",\n    \"lastUpdated\": \"2020-07-29T12:07:31.518Z\",\n    \"domainType\": \"Folder\",\n    \"hasChildFolders\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"availableActions\": [\n        \"update\",\n        \"delete\",\n        \"show\"\n    ]\n}"
						},
						{
							"name": "Create new folder with description",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\",\n    \"description\": \"{{$randomLoremText}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/folders/fdca6136-6083-4ec3-b85c-ec0990c57e65"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 12:07:10 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"fdca6136-6083-4ec3-b85c-ec0990c57e65\",\n    \"label\": \"corporis-maxime-enim\",\n    \"lastUpdated\": \"2020-07-29T12:07:10.331Z\",\n    \"domainType\": \"Folder\",\n    \"hasChildFolders\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"availableActions\": [\n        \"update\",\n        \"delete\",\n        \"show\"\n    ],\n    \"description\": \"Odit et nemo nihil quos cupiditate ab ad.\"\n}"
						}
					]
				},
				{
					"name": "Soft delete folder by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Soft delete folder by id",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/folders/6f319a88-86ab-4537-8c83-f0132d2dc503"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 12:09:00 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"6f319a88-86ab-4537-8c83-f0132d2dc503\",\n    \"label\": \"Development Folder\",\n    \"deleted\": true,\n    \"lastUpdated\": \"2020-07-29T12:08:13.684Z\",\n    \"domainType\": \"Folder\",\n    \"hasChildFolders\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"availableActions\": [\n        \"update\",\n        \"delete\",\n        \"show\"\n    ]\n}"
						},
						{
							"name": "Permanent delete folder by not found id",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{$randomUUID}}?permanent=true",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{$randomUUID}}"
									],
									"query": [
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 12:05:47 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"path\": \"/api/folders/490238ba-188d-4533-8ce8-91f3efb3b8e0\",\n    \"resource\": \"Folder\",\n    \"id\": \"490238ba-188d-4533-8ce8-91f3efb3b8e0\"\n}"
						}
					]
				},
				{
					"name": "Edit folder by id",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"{{$randomLoremParagraph}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Permanent delete folder by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/folders/{{$randomUUID}}?permanent=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{$randomUUID}}"
							],
							"query": [
								{
									"key": "permanent",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Permanent delete folder by id",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/7f7f26a8-bcf6-4fdb-832f-28866b64725b?permanent=true",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"7f7f26a8-bcf6-4fdb-832f-28866b64725b"
									],
									"query": [
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 12:09:23 GMT"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Permanent delete folder by not found id",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{$randomUUID}}?permanent=true",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{$randomUUID}}"
									],
									"query": [
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 12:05:47 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"path\": \"/api/folders/490238ba-188d-4533-8ce8-91f3efb3b8e0\",\n    \"resource\": \"Folder\",\n    \"id\": \"490238ba-188d-4533-8ce8-91f3efb3b8e0\"\n}"
						}
					]
				},
				{
					"name": "Create new folder inside folder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\",\n    \"description\": \"{{$randomLoremText}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}/folders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}",
								"folders"
							]
						}
					},
					"response": [
						{
							"name": "Create new folder with description",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\",\n    \"description\": \"{{$randomLoremText}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/folders/fdca6136-6083-4ec3-b85c-ec0990c57e65"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 12:07:10 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"fdca6136-6083-4ec3-b85c-ec0990c57e65\",\n    \"label\": \"corporis-maxime-enim\",\n    \"lastUpdated\": \"2020-07-29T12:07:10.331Z\",\n    \"domainType\": \"Folder\",\n    \"hasChildFolders\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"availableActions\": [\n        \"update\",\n        \"delete\",\n        \"show\"\n    ],\n    \"description\": \"Odit et nemo nihil quos cupiditate ab ad.\"\n}"
						},
						{
							"name": "Create new folder inside folder",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\",\n    \"description\": \"{{$randomLoremText}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"folders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/folders/657ccffb-fd58-4d87-a36a-bb0b3fbab4e3"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 13:39:12 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"657ccffb-fd58-4d87-a36a-bb0b3fbab4e3\",\n    \"label\": \"hic-nesciunt-reprehenderit\",\n    \"lastUpdated\": \"2020-08-05T13:39:09.806Z\",\n    \"domainType\": \"Folder\",\n    \"hasChildFolders\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"availableActions\": [\n        \"show\",\n        \"update\",\n        \"delete\"\n    ],\n    \"description\": \"Illum et corporis minima. Qui rerum quos ex. Voluptate ipsam consequuntur quae. Fuga excepturi ullam. Excepturi sit quia fugiat sit sapiente voluptas. Harum aut tenetur sapiente et.\"\n}"
						},
						{
							"name": "Create new folder with no description",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/folders/651084dd-91db-475e-a061-b04e9f3823eb"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 12:07:31 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"651084dd-91db-475e-a061-b04e9f3823eb\",\n    \"label\": \"praesentium-voluptatum-laborum\",\n    \"lastUpdated\": \"2020-07-29T12:07:31.518Z\",\n    \"domainType\": \"Folder\",\n    \"hasChildFolders\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"availableActions\": [\n        \"update\",\n        \"delete\",\n        \"show\"\n    ]\n}"
						},
						{
							"name": "Create new folder - Label already exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"nemo-voluptas-vero\",\n    \"description\": \"{{$randomLoremText}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 31 Jul 2020 14:46:50 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 1,\n    \"errors\": [\n        {\n            \"message\": \"Property [label] of class [class uk.ac.ox.softeng.maurodatamapper.core.container.Folder] with value [nemo-voluptas-vero] must be unique\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get all folders in folder",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}/folders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}",
								"folders"
							]
						}
					},
					"response": [
						{
							"name": "Get all folders in folder",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"folders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 13:40:38 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 1,\n    \"items\": [\n        {\n            \"id\": \"657ccffb-fd58-4d87-a36a-bb0b3fbab4e3\",\n            \"label\": \"hic-nesciunt-reprehenderit\",\n            \"lastUpdated\": \"2020-08-05T13:39:09.806Z\",\n            \"domainType\": \"Folder\",\n            \"hasChildFolders\": false\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Set readable by everyone",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}/readByEveryone",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}",
								"readByEveryone"
							]
						}
					},
					"response": [
						{
							"name": "Set readable by everyone",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/readByEveryone",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"readByEveryone"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/folders/657ccffb-fd58-4d87-a36a-bb0b3fbab4e3"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 14:11:04 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"657ccffb-fd58-4d87-a36a-bb0b3fbab4e3\",\n    \"label\": \"hic-nesciunt-reprehenderit\",\n    \"lastUpdated\": \"2020-08-05T14:11:03.059Z\",\n    \"domainType\": \"Folder\",\n    \"hasChildFolders\": true,\n    \"readableByEveryone\": true,\n    \"readableByAuthenticatedUsers\": false,\n    \"availableActions\": [\n        \"show\",\n        \"update\",\n        \"delete\"\n    ],\n    \"description\": \"Illum et corporis minima. Qui rerum quos ex. Voluptate ipsam consequuntur quae. Fuga excepturi ullam. Excepturi sit quia fugiat sit sapiente voluptas. Harum aut tenetur sapiente et.\"\n}"
						}
					]
				},
				{
					"name": "Remove readable by everyone",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}/readByEveryone",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}",
								"readByEveryone"
							]
						}
					},
					"response": [
						{
							"name": "Remove readable by everyone",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/readByEveryone",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"readByEveryone"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/folders/657ccffb-fd58-4d87-a36a-bb0b3fbab4e3"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 14:12:10 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"657ccffb-fd58-4d87-a36a-bb0b3fbab4e3\",\n    \"label\": \"hic-nesciunt-reprehenderit\",\n    \"lastUpdated\": \"2020-08-05T14:12:10.078Z\",\n    \"domainType\": \"Folder\",\n    \"hasChildFolders\": true,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"availableActions\": [\n        \"show\",\n        \"update\",\n        \"delete\"\n    ],\n    \"description\": \"Illum et corporis minima. Qui rerum quos ex. Voluptate ipsam consequuntur quae. Fuga excepturi ullam. Excepturi sit quia fugiat sit sapiente voluptas. Harum aut tenetur sapiente et.\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Provider Services",
					"item": [
						{
							"name": "Get Exporters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/providers/exporters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"providers",
										"exporters"
									]
								}
							},
							"response": [
								{
									"name": "Get Exporters",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/providers/exporters",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"providers",
												"exporters"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 11:17:09 GMT"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"name\": \"JsonExporterService\",\n        \"version\": \"2.0\",\n        \"displayName\": \"JSON DataModel Exporter\",\n        \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.exporter\",\n        \"allowsExtraMetadataKeys\": true,\n        \"knownMetadataKeys\": [],\n        \"providerType\": \"DataModelExporter\",\n        \"fileExtension\": \"json\",\n        \"fileType\": \"text/json\",\n        \"canExportMultipleDomains\": false\n    },\n    {\n        \"name\": \"XmlExporterService\",\n        \"version\": \"3.0\",\n        \"displayName\": \"XML DataModel Exporter\",\n        \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.exporter\",\n        \"allowsExtraMetadataKeys\": true,\n        \"knownMetadataKeys\": [],\n        \"providerType\": \"DataModelExporter\",\n        \"fileExtension\": \"xml\",\n        \"fileType\": \"text/xml\",\n        \"canExportMultipleDomains\": false\n    }\n]"
								}
							]
						},
						{
							"name": "Get Importers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/providers/importers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"providers",
										"importers"
									]
								}
							},
							"response": [
								{
									"name": "Get Importers",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/providers/importers",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"providers",
												"importers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 11:17:16 GMT"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"name\": \"XmlImporterService\",\n        \"version\": \"3.0\",\n        \"displayName\": \"XML DataModel Importer\",\n        \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.importer\",\n        \"allowsExtraMetadataKeys\": true,\n        \"knownMetadataKeys\": [],\n        \"providerType\": \"DataModelImporter\",\n        \"paramClassType\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.importer.parameter.DataModelFileImporterProviderServiceParameters\",\n        \"canImportMultipleDomains\": true\n    },\n    {\n        \"name\": \"JsonImporterService\",\n        \"version\": \"2.0\",\n        \"displayName\": \"JSON DataModel Importer\",\n        \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.importer\",\n        \"allowsExtraMetadataKeys\": true,\n        \"knownMetadataKeys\": [],\n        \"providerType\": \"DataModelImporter\",\n        \"paramClassType\": \"uk.ac.ox.softeng.maurodatamapper.datamodel.provider.importer.parameter.DataModelFileImporterProviderServiceParameters\",\n        \"canImportMultipleDomains\": false\n    }\n]"
								}
							]
						},
						{
							"name": "Get Emailers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/providers/emailers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"providers",
										"emailers"
									]
								}
							},
							"response": [
								{
									"name": "Get Emailers",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/providers/emailers",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"providers",
												"emailers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 11:17:23 GMT"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"name\": \"BasicEmailProviderService\",\n        \"version\": \"1.0\",\n        \"displayName\": \"Basic Email Provider\",\n        \"namespace\": \"uk.ac.ox.softeng.maurodatamapper.core.provider.email\",\n        \"allowsExtraMetadataKeys\": true,\n        \"knownMetadataKeys\": [],\n        \"providerType\": \"Email\",\n        \"order\": 2147483647\n    }\n]"
								}
							]
						},
						{
							"name": "Get Dataloaders",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/providers/dataloaders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"providers",
										"dataloaders"
									]
								}
							},
							"response": [
								{
									"name": "Get Dataloaders",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/providers/dataloaders",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"providers",
												"dataloaders"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Content-Language",
											"value": "en-GB"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 11:17:29 GMT"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "Catalogue Users",
					"item": [
						{
							"name": "Pending users",
							"item": [
								{
									"name": "Get all Pending Users",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/catalogueUsers/pending",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"catalogueUsers",
												"pending"
											]
										}
									},
									"response": [
										{
											"name": "Get all Pending Users",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{base_url}}/admin/catalogueUsers/pending",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"admin",
														"catalogueUsers",
														"pending"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json;charset=UTF-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Jul 2020 11:18:10 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"count\": 1,\n    \"items\": [\n        {\n            \"id\": \"cb6e53c3-ec6e-4569-8300-c5cc87b1162f\",\n            \"emailAddress\": \"pending@test.com\",\n            \"firstName\": \"pending\",\n            \"lastName\": \"User\",\n            \"pending\": true,\n            \"disabled\": false,\n            \"createdBy\": \"development@test.com\",\n            \"availableActions\": [\n                \"update\",\n                \"delete\",\n                \"show\"\n            ],\n            \"organisation\": \"Oxford\",\n            \"jobTitle\": \"tester\"\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Pending Count",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/catalogueUsers/pendingCount",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"catalogueUsers",
												"pendingCount"
											]
										}
									},
									"response": [
										{
											"name": "Pending Count",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{base_url}}/admin/catalogueUsers/pendingCount",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"admin",
														"catalogueUsers",
														"pendingCount"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json;charset=UTF-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Jul 2020 11:18:18 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"count\": 1\n}"
										}
									]
								},
								{
									"name": "Reject Registration",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/catalogueUsers/{{user_id}}/rejectRegistration",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"catalogueUsers",
												"{{user_id}}",
												"rejectRegistration"
											]
										}
									},
									"response": []
								},
								{
									"name": "Approve Registration",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/catalogueUsers/{{user_id}}/approveRegistration",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"catalogueUsers",
												"{{user_id}}",
												"approveRegistration"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Add new user",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emailAddress\": \"{{$randomEmail}}\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"organisation\": \"Organisation name\",\n    \"jobTitle\": \"Software Engineer\",\n    \"groups\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/catalogueUsers/adminRegister",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"catalogueUsers",
										"adminRegister"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check user exists",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/catalogueUsers/{{$randomEmail}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"catalogueUsers",
										"{{$randomEmail}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset password",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/catalogueUsers/{{user_id}}/adminPasswordReset",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"catalogueUsers",
										"{{user_id}}",
										"adminPasswordReset"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Providers / Plugins",
					"item": [
						{
							"name": "Get Modules",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/modules",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"modules"
									]
								}
							},
							"response": [
								{
									"name": "Get Modules",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/modules",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"modules"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 11:17:43 GMT"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"name\": \"Common\",\n        \"version\": \"4.0.0-SNAPSHOT\"\n    },\n    {\n        \"name\": \"Core\",\n        \"version\": \"4.0.0-SNAPSHOT\"\n    },\n    {\n        \"name\": \"PluginAuthenticationBasic\",\n        \"version\": \"4.0.0-SNAPSHOT\"\n    },\n    {\n        \"name\": \"Security\",\n        \"version\": \"4.0.0-SNAPSHOT\"\n    },\n    {\n        \"name\": \"PluginDatamodel\",\n        \"version\": \"4.0.0-SNAPSHOT\"\n    },\n    {\n        \"name\": \"PluginTerminology\",\n        \"version\": \"4.0.0-SNAPSHOT\"\n    },\n    {\n        \"name\": \"assetPipeline\",\n        \"version\": \"3.0.11\"\n    },\n    {\n        \"name\": \"cache\",\n        \"version\": \"4.0.3\"\n    },\n    {\n        \"name\": \"codecs\",\n        \"version\": \"4.0.3\"\n    },\n    {\n        \"name\": \"controllers\",\n        \"version\": \"4.0.3\"\n    },\n    {\n        \"name\": \"controllersAsync\",\n        \"version\": \"SNAPSHOT\"\n    },\n    {\n        \"name\": \"converters\",\n        \"version\": \"4.0.3\"\n    },\n    {\n        \"name\": \"core\",\n        \"version\": \"4.0.3\"\n    },\n    {\n        \"name\": \"dataSource\",\n        \"version\": \"4.0.3\"\n    },\n    {\n        \"name\": \"domainClass\",\n        \"version\": \"4.0.3\"\n    },\n    {\n        \"name\": \"eventBus\",\n        \"version\": \"SNAPSHOT\"\n    },\n    {\n        \"name\": \"hibernate\",\n        \"version\": \"7.0.2\"\n    },\n    {\n        \"name\": \"hibernateSearch\",\n        \"version\": \"2.3.0\"\n    },\n    {\n        \"name\": \"i18n\",\n        \"version\": \"4.0.3\"\n    },\n    {\n        \"name\": \"interceptors\",\n        \"version\": \"4.0.3\"\n    },\n    {\n        \"name\": \"jsonView\",\n        \"version\": \"2.0.0\"\n    },\n    {\n        \"name\": \"markupView\",\n        \"version\": \"2.0.0\"\n    },\n    {\n        \"name\": \"restResponder\",\n        \"version\": \"4.0.3\"\n    },\n    {\n        \"name\": \"services\",\n        \"version\": \"4.0.3\"\n    },\n    {\n        \"name\": \"urlMappings\",\n        \"version\": \"4.0.3\"\n    },\n    {\n        \"name\": \"java.base\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.compiler\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.datatransfer\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.desktop\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.instrument\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.logging\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.management\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.management.rmi\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.naming\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.net.http\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.prefs\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.rmi\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.scripting\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.security.jgss\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.security.sasl\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.smartcardio\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.sql\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.sql.rowset\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.transaction.xa\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.xml\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"java.xml.crypto\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.accessibility\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.attach\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.charsets\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.compiler\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.crypto.cryptoki\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.crypto.ec\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.dynalink\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.editpad\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.httpserver\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.internal.ed\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.internal.jvmstat\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.internal.le\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.internal.opt\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.jartool\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.javadoc\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.jconsole\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.jdeps\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.jdi\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.jdwp.agent\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.jfr\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.jlink\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.jshell\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.jsobject\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.jstatd\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.localedata\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.management\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.management.agent\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.management.jfr\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.naming.dns\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.naming.rmi\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.net\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.scripting.nashorn\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.sctp\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.security.auth\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.security.jgss\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.unsupported\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.unsupported.desktop\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.xml.dom\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"jdk.zipfs\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"openj9.cuda\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"openj9.dataaccess\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"openj9.dtfj\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"openj9.gpu\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"openj9.jvm\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"openj9.sharedclasses\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"openj9.traceformat\",\n        \"version\": \"12.0.2\"\n    },\n    {\n        \"name\": \"openj9.zosconditionhandling\",\n        \"version\": \"12.0.2\"\n    }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Session",
					"item": [
						{
							"name": "List all Active Sessions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/activeSessions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"activeSessions"
									]
								}
							},
							"response": [
								{
									"name": "List all Active Sessions",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/activeSessions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"activeSessions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 30 Jul 2020 09:07:32 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 4,\n    \"items\": [\n        {\n            \"id\": \"C3F99C6144756BF678D4FCF2ED2CCD43\",\n            \"lastAccessedDateTime\": \"2020-07-30T09:06:44.441Z\",\n            \"creationDateTime\": \"2020-07-30T09:06:44.343Z\",\n            \"userEmailAddress\": \"admin@maurodatamapper.com\",\n            \"lastAccessedUrl\": \"/api/admin/activeSessions\"\n        },\n        {\n            \"id\": \"2A882BEFB4D9A3DBA1D6984EEBD95E37\",\n            \"lastAccessedDateTime\": \"2020-07-30T08:50:17.826Z\",\n            \"creationDateTime\": \"2020-07-30T08:49:35.121Z\",\n            \"userEmailAddress\": \"unlogged_user@mdm-core.com\",\n            \"lastAccessedUrl\": \"/api/tree/folders\"\n        },\n        {\n            \"id\": \"6C179EDA552A8961849ADA7954616A06\",\n            \"lastAccessedDateTime\": \"2020-07-30T08:51:50.261Z\",\n            \"creationDateTime\": \"2020-07-30T08:51:50.253Z\",\n            \"userEmailAddress\": \"unlogged_user@mdm-core.com\",\n            \"lastAccessedUrl\": \"/api/tree/folders\"\n        },\n        {\n            \"id\": \"D15B5225306C05F5C56EC2A0CA41612E\",\n            \"lastAccessedDateTime\": \"2020-07-30T09:03:39.006Z\",\n            \"creationDateTime\": \"2020-07-30T09:03:38.998Z\",\n            \"userEmailAddress\": \"unlogged_user@mdm-core.com\",\n            \"lastAccessedUrl\": \"/api/tree/folders\"\n        }\n    ]\n}"
								},
								{
									"name": "List all Active Sessions",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/activeSessions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"activeSessions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 11:17:57 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 1,\n    \"items\": [\n        {\n            \"id\": \"7DEB12FEB947EB176C8C2FBC26FF6DFC\",\n            \"lastAccessedDateTime\": \"2020-07-29T11:17:43.282Z\",\n            \"creationDateTime\": \"2020-07-29T10:59:17.623Z\",\n            \"userEmailAddress\": \"admin@maurodatamapper.com\",\n            \"lastAccessedUrl\": \"/api/admin/activeSessions\"\n        }\n    ]\n}"
								},
								{
									"name": "List all Active Sessions - Not admin user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/activeSessions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"activeSessions"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 30 Jul 2020 09:02:52 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"path\": \"/api/admin/activeSessions\",\n    \"additional\": \"User must be an application administrator\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Permissions",
					"item": [
						{
							"name": "Group Roles",
							"item": [
								{
									"name": "List all group roles",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/groupRoles",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"groupRoles"
											]
										}
									},
									"response": []
								},
								{
									"name": "List all application access group roles",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/availableApplicationAccess",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"availableApplicationAccess"
											]
										}
									},
									"response": [
										{
											"name": "List all application access group roles",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{base_url}}/admin/availableApplicationAccess",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"admin",
														"availableApplicationAccess"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json;charset=UTF-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Jul 2020 11:15:40 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"count\": 5,\n    \"items\": [\n        {\n            \"id\": \"f686a892-8bcf-4bc8-82b3-208b174cd2e5\",\n            \"name\": \"group_admin\",\n            \"displayName\": \"Group Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"bc3c93de-605b-4630-a41c-a3f66e071cc1\"\n        },\n        {\n            \"id\": \"2f8c23f3-8c0e-4920-8af7-505d8007c25b\",\n            \"name\": \"container_group_admin\",\n            \"displayName\": \"Container Group Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"f686a892-8bcf-4bc8-82b3-208b174cd2e5\"\n        },\n        {\n            \"id\": \"eae76d34-d520-4369-8f03-f4fcc0b8b61e\",\n            \"name\": \"site_admin\",\n            \"displayName\": \"Site Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true\n        },\n        {\n            \"id\": \"3629ecc1-24f7-45be-a33f-f8ef991ba4ea\",\n            \"name\": \"application_admin\",\n            \"displayName\": \"Application Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"eae76d34-d520-4369-8f03-f4fcc0b8b61e\"\n        },\n        {\n            \"id\": \"bc3c93de-605b-4630-a41c-a3f66e071cc1\",\n            \"name\": \"user_admin\",\n            \"displayName\": \"User Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"3629ecc1-24f7-45be-a33f-f8ef991ba4ea\"\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "List all application group roles",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/applicationGroupRoles",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"applicationGroupRoles"
											]
										}
									},
									"response": [
										{
											"name": "List all application group roles",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{base_url}}/admin/applicationGroupRoles",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"admin",
														"applicationGroupRoles"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json;charset=UTF-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Jul 2020 11:16:21 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"count\": 5,\n    \"items\": [\n        {\n            \"id\": \"2f8c23f3-8c0e-4920-8af7-505d8007c25b\",\n            \"name\": \"container_group_admin\",\n            \"displayName\": \"Container Group Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"f686a892-8bcf-4bc8-82b3-208b174cd2e5\"\n        },\n        {\n            \"id\": \"f686a892-8bcf-4bc8-82b3-208b174cd2e5\",\n            \"name\": \"group_admin\",\n            \"displayName\": \"Group Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"bc3c93de-605b-4630-a41c-a3f66e071cc1\"\n        },\n        {\n            \"id\": \"eae76d34-d520-4369-8f03-f4fcc0b8b61e\",\n            \"name\": \"site_admin\",\n            \"displayName\": \"Site Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true\n        },\n        {\n            \"id\": \"3629ecc1-24f7-45be-a33f-f8ef991ba4ea\",\n            \"name\": \"application_admin\",\n            \"displayName\": \"Application Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"eae76d34-d520-4369-8f03-f4fcc0b8b61e\"\n        },\n        {\n            \"id\": \"bc3c93de-605b-4630-a41c-a3f66e071cc1\",\n            \"name\": \"user_admin\",\n            \"displayName\": \"User Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"3629ecc1-24f7-45be-a33f-f8ef991ba4ea\"\n        }\n    ]\n}"
										},
										{
											"name": "List all application access group roles",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{base_url}}/admin/availableApplicationAccess",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"admin",
														"availableApplicationAccess"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json;charset=UTF-8"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Jul 2020 11:15:40 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"count\": 5,\n    \"items\": [\n        {\n            \"id\": \"f686a892-8bcf-4bc8-82b3-208b174cd2e5\",\n            \"name\": \"group_admin\",\n            \"displayName\": \"Group Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"bc3c93de-605b-4630-a41c-a3f66e071cc1\"\n        },\n        {\n            \"id\": \"2f8c23f3-8c0e-4920-8af7-505d8007c25b\",\n            \"name\": \"container_group_admin\",\n            \"displayName\": \"Container Group Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"f686a892-8bcf-4bc8-82b3-208b174cd2e5\"\n        },\n        {\n            \"id\": \"eae76d34-d520-4369-8f03-f4fcc0b8b61e\",\n            \"name\": \"site_admin\",\n            \"displayName\": \"Site Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true\n        },\n        {\n            \"id\": \"3629ecc1-24f7-45be-a33f-f8ef991ba4ea\",\n            \"name\": \"application_admin\",\n            \"displayName\": \"Application Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"eae76d34-d520-4369-8f03-f4fcc0b8b61e\"\n        },\n        {\n            \"id\": \"bc3c93de-605b-4630-a41c-a3f66e071cc1\",\n            \"name\": \"user_admin\",\n            \"displayName\": \"User Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"3629ecc1-24f7-45be-a33f-f8ef991ba4ea\"\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Get group role by id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/groupRoles/{{$randomUUID}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"groupRoles",
												"{{$randomUUID}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "User Groups",
					"item": [
						{
							"name": "List all User Groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/userGroups",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"userGroups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a User Group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/userGroups/{{user_group_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"userGroups",
										"{{user_group_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List all Catalogue Users in a User Group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/userGroups/{{user_group_id}}/catalogueUsers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"userGroups",
										"{{user_group_id}}",
										"catalogueUsers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a Catalogue User to a User Group",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/userGroups/{{user_group_id}}/catalogueUsers/{{user_id_to_add_to_or_delete_from_group}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"userGroups",
										"{{user_group_id}}",
										"catalogueUsers",
										"{{user_id_to_add_to_or_delete_from_group}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Catalogue User from a User Group",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/userGroups/{{user_group_id}}/catalogueUsers/{{user_id_to_add_to_or_delete_from_group}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"userGroups",
										"{{user_group_id}}",
										"catalogueUsers",
										"{{user_id_to_add_to_or_delete_from_group}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Model and Documentation Superseded",
					"item": [
						{
							"name": "Get DataModel Model superseded",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/tree/folders/dataModel/modelSuperseded",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"tree",
										"folders",
										"dataModel",
										"modelSuperseded"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get DataModel Documentation superseded",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/tree/folders/dataModel/documentationSuperseded",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"tree",
										"folders",
										"dataModel",
										"documentationSuperseded"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Terminology Model superseded",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/tree/folders/terminologies/modelSuperseded",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"tree",
										"folders",
										"terminologies",
										"modelSuperseded"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Terminology Documentation superseded",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/tree/folders/terminologies/documentationSuperseded",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"tree",
										"folders",
										"terminologies",
										"documentationSuperseded"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get CodeSet Model superseded",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/tree/folders/codeSets/modelSuperseded",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"tree",
										"folders",
										"codeSets",
										"modelSuperseded"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get CodeSet Documentation superseded",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/tree/folders/codeSets/documentationSuperseded",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"tree",
										"folders",
										"codeSets",
										"documentationSuperseded"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Api Properties",
					"item": [
						{
							"name": "List all Api Properties",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/properties",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"properties"
									]
								},
								"description": "Get the current values of system configuration properties"
							},
							"response": [
								{
									"name": "List all Api Properties",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/properties",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"properties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 11:00:22 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"email.invite_edit.body\": \"Dear ${firstName},\\nYou have been invited to edit the model '${itemLabel}' in the Mauro Data Mapper at ${catalogueUrl}\\n\\nYour username / email address is: ${emailAddress}\\nYour password is: ${tempPassword}\\n and you will be asked to update this when you first log on.\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.admin_register.body\": \"Dear ${firstName},\\nYou have been given access to the Mauro Data Mapper at ${catalogueUrl} \\n\\nYour username / email address is: ${emailAddress} \\nYour password is: ${tempPassword} \\nand you will be asked to update this when you first log on.\\n\\nKind regards, the Mauro Data Mapper folks. \\n\\n(This is an automated mail).\",\n    \"email.admin_register.subject\": \"Mauro Data Mapper Registration\",\n    \"email.self_register.subject\": \"Mauro Data Mapper Registration\",\n    \"email.forgotten_password.subject\": \"Mauro Data Mapper Forgotten Password\",\n    \"email.invite_edit.subject\": \"Mauro Data Mapper Invitation\",\n    \"email.invite_view.subject\": \"Mauro Data Mapper Invitation\",\n    \"email.admin_confirm_registration.body\": \"Dear ${firstName},\\nYour registration for the Mauro Data Mapper at ${catalogueUrl} has been confirmed.\\n\\nYour username / email address is: ${emailAddress} \\nYou chose a password on registration, but can reset it from the login page.\\n\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.self_register.body\": \"Dear ${firstName},\\nYou have self-registered for the Mauro Data Mapper at ${catalogueUrl}\\n\\nYour username / email address is: ${emailAddress}\\nYour registration is marked as pending: you'll be sent another email when your request has been confirmed by an administrator. \\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.password_reset.body\": \"Dear ${firstName},\\nYour password has been reset for the Mauro Data Mapper at ${catalogueUrl}.\\n\\nYour new temporary password is: ${tempPassword} \\nand you will be asked to update this when you next log on.\\n\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.from.name\": \"Mauro Data Mapper\",\n    \"email.admin_confirm_registration.subject\": \"Mauro Data Mapper Registration - Confirmation\",\n    \"email.forgotten_password.body\": \"Dear ${firstName},\\nA request has been made to reset the password for the Mauro Data Mapper at ${catalogueUrl}.\\nIf you did not make this request please ignore this email.\\n\\nPlease use the following link to reset your password ${passwordResetLink}.\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.password_reset.subject\": \"Mauro Data Mapper Password Reset\",\n    \"email.invite_view.body\": \"Dear ${firstName},\\nYou have been invited to view the item '${itemLabel}' in the Mauro Data Mapper at ${catalogueUrl}\\n\\nYour username / email address is: ${emailAddress}\\nYour password is: ${tempPassword}\\n and you will be asked to update this when you first log on.\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.from.address\": \"username@gmail.com\"\n}"
								}
							]
						},
						{
							"name": "List all Api Properties as CSV",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/properties?format=csv",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"properties"
									],
									"query": [
										{
											"key": "format",
											"value": "csv"
										}
									]
								},
								"description": "Get the current values of system configuration properties"
							},
							"response": [
								{
									"name": "List all Api Properties as CSV",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/properties",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"properties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 11:00:22 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"email.invite_edit.body\": \"Dear ${firstName},\\nYou have been invited to edit the model '${itemLabel}' in the Mauro Data Mapper at ${catalogueUrl}\\n\\nYour username / email address is: ${emailAddress}\\nYour password is: ${tempPassword}\\n and you will be asked to update this when you first log on.\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.admin_register.body\": \"Dear ${firstName},\\nYou have been given access to the Mauro Data Mapper at ${catalogueUrl} \\n\\nYour username / email address is: ${emailAddress} \\nYour password is: ${tempPassword} \\nand you will be asked to update this when you first log on.\\n\\nKind regards, the Mauro Data Mapper folks. \\n\\n(This is an automated mail).\",\n    \"email.admin_register.subject\": \"Mauro Data Mapper Registration\",\n    \"email.self_register.subject\": \"Mauro Data Mapper Registration\",\n    \"email.forgotten_password.subject\": \"Mauro Data Mapper Forgotten Password\",\n    \"email.invite_edit.subject\": \"Mauro Data Mapper Invitation\",\n    \"email.invite_view.subject\": \"Mauro Data Mapper Invitation\",\n    \"email.admin_confirm_registration.body\": \"Dear ${firstName},\\nYour registration for the Mauro Data Mapper at ${catalogueUrl} has been confirmed.\\n\\nYour username / email address is: ${emailAddress} \\nYou chose a password on registration, but can reset it from the login page.\\n\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.self_register.body\": \"Dear ${firstName},\\nYou have self-registered for the Mauro Data Mapper at ${catalogueUrl}\\n\\nYour username / email address is: ${emailAddress}\\nYour registration is marked as pending: you'll be sent another email when your request has been confirmed by an administrator. \\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.password_reset.body\": \"Dear ${firstName},\\nYour password has been reset for the Mauro Data Mapper at ${catalogueUrl}.\\n\\nYour new temporary password is: ${tempPassword} \\nand you will be asked to update this when you next log on.\\n\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.from.name\": \"Mauro Data Mapper\",\n    \"email.admin_confirm_registration.subject\": \"Mauro Data Mapper Registration - Confirmation\",\n    \"email.forgotten_password.body\": \"Dear ${firstName},\\nA request has been made to reset the password for the Mauro Data Mapper at ${catalogueUrl}.\\nIf you did not make this request please ignore this email.\\n\\nPlease use the following link to reset your password ${passwordResetLink}.\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.password_reset.subject\": \"Mauro Data Mapper Password Reset\",\n    \"email.invite_view.body\": \"Dear ${firstName},\\nYou have been invited to view the item '${itemLabel}' in the Mauro Data Mapper at ${catalogueUrl}\\n\\nYour username / email address is: ${emailAddress}\\nYour password is: ${tempPassword}\\n and you will be asked to update this when you first log on.\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.from.address\": \"username@gmail.com\"\n}"
								}
							]
						},
						{
							"name": "List all Api Properties as XML",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/properties?format=xml",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"properties"
									],
									"query": [
										{
											"key": "format",
											"value": "xml"
										}
									]
								},
								"description": "Get the current values of system configuration properties"
							},
							"response": [
								{
									"name": "List all Api Properties as XML",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/admin/properties",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"properties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Jul 2020 11:00:22 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"email.invite_edit.body\": \"Dear ${firstName},\\nYou have been invited to edit the model '${itemLabel}' in the Mauro Data Mapper at ${catalogueUrl}\\n\\nYour username / email address is: ${emailAddress}\\nYour password is: ${tempPassword}\\n and you will be asked to update this when you first log on.\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.admin_register.body\": \"Dear ${firstName},\\nYou have been given access to the Mauro Data Mapper at ${catalogueUrl} \\n\\nYour username / email address is: ${emailAddress} \\nYour password is: ${tempPassword} \\nand you will be asked to update this when you first log on.\\n\\nKind regards, the Mauro Data Mapper folks. \\n\\n(This is an automated mail).\",\n    \"email.admin_register.subject\": \"Mauro Data Mapper Registration\",\n    \"email.self_register.subject\": \"Mauro Data Mapper Registration\",\n    \"email.forgotten_password.subject\": \"Mauro Data Mapper Forgotten Password\",\n    \"email.invite_edit.subject\": \"Mauro Data Mapper Invitation\",\n    \"email.invite_view.subject\": \"Mauro Data Mapper Invitation\",\n    \"email.admin_confirm_registration.body\": \"Dear ${firstName},\\nYour registration for the Mauro Data Mapper at ${catalogueUrl} has been confirmed.\\n\\nYour username / email address is: ${emailAddress} \\nYou chose a password on registration, but can reset it from the login page.\\n\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.self_register.body\": \"Dear ${firstName},\\nYou have self-registered for the Mauro Data Mapper at ${catalogueUrl}\\n\\nYour username / email address is: ${emailAddress}\\nYour registration is marked as pending: you'll be sent another email when your request has been confirmed by an administrator. \\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.password_reset.body\": \"Dear ${firstName},\\nYour password has been reset for the Mauro Data Mapper at ${catalogueUrl}.\\n\\nYour new temporary password is: ${tempPassword} \\nand you will be asked to update this when you next log on.\\n\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.from.name\": \"Mauro Data Mapper\",\n    \"email.admin_confirm_registration.subject\": \"Mauro Data Mapper Registration - Confirmation\",\n    \"email.forgotten_password.body\": \"Dear ${firstName},\\nA request has been made to reset the password for the Mauro Data Mapper at ${catalogueUrl}.\\nIf you did not make this request please ignore this email.\\n\\nPlease use the following link to reset your password ${passwordResetLink}.\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.password_reset.subject\": \"Mauro Data Mapper Password Reset\",\n    \"email.invite_view.body\": \"Dear ${firstName},\\nYou have been invited to view the item '${itemLabel}' in the Mauro Data Mapper at ${catalogueUrl}\\n\\nYour username / email address is: ${emailAddress}\\nYour password is: ${tempPassword}\\n and you will be asked to update this when you first log on.\\nKind regards, the Mauro Data Mapper folks.\\n\\n(This is an automated mail).\",\n    \"email.from.address\": \"username@gmail.com\"\n}"
								}
							]
						},
						{
							"name": "List all publically visible Api Properties",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/properties",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"properties"
									]
								},
								"description": "Get the current values of system configuration properties"
							},
							"response": []
						},
						{
							"name": "Update Api Property",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/properties/{{api_property_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"properties",
										"{{api_property_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Api Property",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/properties/{{api_property_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"properties",
										"{{api_property_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new Api Property",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"{{$randomNoun}}.{{$randomNoun}}.{{$randomNoun}}\",\n    \"value\": \"{{$randomPhrase}}\",\n    \"publiclyVisible\": {{$randomBoolean}},\n    \"category\": \"{{$randomNoun}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/properties",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"properties"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new Api Property Collection",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"items\": [\n        {\n            \"key\": \"first.json.property\",\n            \"value\": \"first.json.value\",\n            \"publiclyVisible\": {{$randomBoolean}},\n            \"category\": \"{{$randomNoun}}\"\n        },\n        {\n            \"key\": \"second.json.property\",\n            \"value\": \"second.json.value\",\n            \"publiclyVisible\": {{$randomBoolean}},\n            \"category\": \"{{$randomNoun}}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/properties/apply",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"properties",
										"apply"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new Api Property from CSV",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/csv",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "key,value,publiclyVisible,category\nmy.special.property,has.a.special.value,false,Example",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/properties",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"properties"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new Api Property Collection from CSV",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/csv",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "id,key,value,category,publiclyVisible,lastUpdatedBy,createdBy,lastUpdated\n0c387c7e-630d-47d6-9a5b-7071b36cc6d9,email.invite_edit.body,\"Dear ${firstName},\nYou have been invited to edit the model '${itemLabel}' in the Mauro Data Mapper at ${catalogueUrl}\n\nYour username / email address is: ${emailAddress}\nYour password is: ${tempPassword}\n and you will be asked to update this when you first log on.\nKind regards, the Mauro Data Mapper folks.\n\n(This is an automated mail).\",Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.042086Z\n002d4341-b3ad-4ea2-8fda-c17c887ab370,email.admin_register.body,\"Dear ${firstName},\nYou have been given access to the Mauro Data Mapper at ${catalogueUrl} \n\nYour username / email address is: ${emailAddress} \nYour password is: ${tempPassword} \nand you will be asked to update this when you first log on.\n\nKind regards, the Mauro Data Mapper folks. \n\n(This is an automated mail).\",Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.070452Z\nadd8f005-2b0c-4e6f-a328-2e93a1f00201,email.admin_register.subject,Mauro Data Mapper Registration,Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.071445Z\n56b7d65c-8864-4b9e-b48f-2071dd1408fe,email.self_register.subject,Mauro Data Mapper Registration,Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.071729Z\n4cfa81f6-ae98-4401-85b3-a7afe0fb693d,email.forgotten_password.subject,Mauro Data Mapper Forgotten Password,Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.072299Z\n165e780b-b3ae-4609-96a6-539b8b9261f0,email.invite_edit.subject,Mauro Data Mapper Invitation,Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.072554Z\n13e0f4a4-01d1-4ed9-9454-5e62d44f8057,email.invite_view.subject,Mauro Data Mapper Invitation,Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.072794Z\n6b6f41dc-2f2c-4a9b-b45e-0356056d9723,email.admin_confirm_registration.body,\"Dear ${firstName},\nYour registration for the Mauro Data Mapper at ${catalogueUrl} has been confirmed.\n\nYour username / email address is: ${emailAddress} \nYou chose a password on registration, but can reset it from the login page.\n\nKind regards, the Mauro Data Mapper folks.\n\n(This is an automated mail).\",Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.073237Z\n97f3fec9-0853-46a8-9c18-adbf7ba8eae8,email.self_register.body,\"Dear ${firstName},\nYou have self-registered for the Mauro Data Mapper at ${catalogueUrl}\n\nYour username / email address is: ${emailAddress}\nYour registration is marked as pending: you'll be sent another email when your request has been confirmed by an administrator. \nKind regards, the Mauro Data Mapper folks.\n\n(This is an automated mail).\",Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.073511Z\ne188ba24-46c1-4a8a-9abd-262ddb3c362d,email.password_reset.body,\"Dear ${firstName},\nYour password has been reset for the Mauro Data Mapper at ${catalogueUrl}.\n\nYour new temporary password is: ${tempPassword} \nand you will be asked to update this when you next log on.\n\nKind regards, the Mauro Data Mapper folks.\n\n(This is an automated mail).\",Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.073836Z\ne36e90c4-5ed1-4fa4-9e10-c4ebd4a8c501,email.from.name,Mauro Data Mapper,Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.074164Z\n1b61a7a9-c9a9-450e-a46e-da1d8e8c7f9f,email.admin_confirm_registration.subject,Mauro Data Mapper Registration - Confirmation,Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.074428Z\n7b30b603-09b5-496e-be0b-88dac168e933,email.forgotten_password.body,\"Dear ${firstName},\nA request has been made to reset the password for the Mauro Data Mapper at ${catalogueUrl}.\nIf you did not make this request please ignore this email.\n\nPlease use the following link to reset your password ${passwordResetLink}.\nKind regards, the Mauro Data Mapper folks.\n\n(This is an automated mail).\",Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.074657Z\n2763ca6e-ed8c-4050-9208-3ed8b1a048bd,email.password_reset.subject,Mauro Data Mapper Password Reset,Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.074885Z\na196d883-49b2-41fa-be5a-1807f7a97514,email.invite_view.body,\"Dear ${firstName},\nYou have been invited to view the item '${itemLabel}' in the Mauro Data Mapper at ${catalogueUrl}\n\nYour username / email address is: ${emailAddress}\nYour password is: ${tempPassword}\n and you will be asked to update this when you first log on.\nKind regards, the Mauro Data Mapper folks.\n\n(This is an automated mail).\",Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.075112Z\n8b39f3db-04b2-4dee-8105-c12efccd4b13,email.from.address,mtf@maurodatamapper.com,Email,false,bootstrap.user@maurodatamapper.com,bootstrap.user@maurodatamapper.com,2021-11-09T15:32:46.124983Z",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/properties/apply",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"properties",
										"apply"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new Api Property from XML",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version='1.0'?>\n<apiProperty>\n    <key>an.xml.key</key>\n    <value>An XML value</value>\n    <category>XML</category>\n    <publiclyVisible>false</publiclyVisible>\n</apiProperty>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/properties",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"properties"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new Api Property Collection from XML",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<?xml version='1.0'?>\n<apiProperties>\n    <count>2</count>\n    <items>\n        <apiProperty>\n            <key>a.first.xml.key</key>\n            <value>A first XML value</value>\n            <category>Email</category>\n            <publiclyVisible>false</publiclyVisible>\n        </apiProperty>\n        <apiProperty>\n            <key>a.second.xml.key</key>\n            <value>A second XML value</value>\n            <category>Email</category>\n            <publiclyVisible>false</publiclyVisible>\n        </apiProperty>\n    </items>\n</apiProperties>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/properties/apply",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"properties",
										"apply"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Rebuild Lucene Indexes",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/rebuildLuceneIndexes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"rebuildLuceneIndexes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"status"
							]
						},
						"description": "Get system information"
					},
					"response": [
						{
							"name": "Status",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/status",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:18:57 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Mauro Data Mapper Version\": \"4.0.0-SNAPSHOT\",\n    \"Grails Version\": \"4.0.3\",\n    \"Java Version\": \"12.0.2\",\n    \"Java Vendor\": \"AdoptOpenJDK\",\n    \"OS Name\": \"Mac OS X\",\n    \"OS Version\": \"10.15.6\",\n    \"OS Architecture\": \"x86_64\",\n    \"Driver Manager Drivers Available\": [\n        {\n            \"class\": \"org.postgresql.Driver\",\n            \"version\": \"42.2\"\n        },\n        {\n            \"class\": \"org.h2.Driver\",\n            \"version\": \"1.4\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List all Emails",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/emails",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"emails"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Catalogue Users",
			"item": [
				{
					"name": "User details",
					"item": [
						{
							"name": "Get user details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/catalogueUsers/{{user_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"catalogueUsers",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update user details",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"First Name\",\n    \"lastName\": \"Last Last\",\n    \"organisation\": \"Organisation name\",\n    \"jobTitle\": \"Software Engineer\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/catalogueUsers/{{user_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"catalogueUsers",
										"{{user_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User preferences",
					"item": [
						{
							"name": "Get user preferences",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/catalogueUsers/{{user_id}}/userPreferences",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"catalogueUsers",
										"{{user_id}}",
										"userPreferences"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update preferences",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"countPerTable\": 20,\n    \"counts\": [\n        5,\n        10,\n        20,\n        50\n    ],\n    \"expandMoreDescription\": true,\n    \"favourites\": [],\n    \"includeSupersededModels\": true,\n    \"showSupersededModels\": false,\n    \"showDeletedModels\": false,\n    \"dataFlowDiagramsSetting\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/catalogueUsers/{{user_id}}/userPreferences",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"catalogueUsers",
										"{{user_id}}",
										"userPreferences"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get all users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/catalogueUsers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"catalogueUsers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request account",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"emailAddress\": \"example@email.com\",\n    \"firstName\": \"First Name\",\n    \"lastName\": \"Last Name\",\n    \"organisation\": \"Organisation name\",\n    \"roleInOrganisation\": \"Software Engineer\",\n    \"password\": \"your-password\",\n    \"confirmPassword\": \"your-password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/catalogueUsers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"catalogueUsers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forgot password",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/catalogueUsers/resetPasswordLink/{{email}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"catalogueUsers",
								"resetPasswordLink",
								"{{email}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Edits",
			"item": [
				{
					"name": "List all edits for a folder",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}/edits",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}",
								"edits"
							]
						}
					},
					"response": [
						{
							"name": "List all edits for a folder",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/edits",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"edits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:30:18 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 0,\n    \"items\": []\n}"
						}
					]
				},
				{
					"name": "List all edits for a datamodel",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}/edits",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}",
								"edits"
							]
						}
					},
					"response": [
						{
							"name": "List all edits for a folder",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/edits",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"edits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:30:18 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 0,\n    \"items\": []\n}"
						}
					]
				},
				{
					"name": "List all edits for a dataclass",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataClasses/{{$randomUUID}}/edits",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataClasses",
								"{{$randomUUID}}",
								"edits"
							]
						}
					},
					"response": [
						{
							"name": "List all edits for a folder",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/edits",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"edits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:30:18 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 0,\n    \"items\": []\n}"
						}
					]
				},
				{
					"name": "List all edits for a dataelement",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataElements/{{$randomUUID}}/edits",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataElements",
								"{{$randomUUID}}",
								"edits"
							]
						}
					},
					"response": [
						{
							"name": "List all edits for a folder",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/edits",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"edits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:30:18 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 0,\n    \"items\": []\n}"
						}
					]
				},
				{
					"name": "List all edits for a terminology",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/terminologies/{{terminology_id}}/edits",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"terminologies",
								"{{terminology_id}}",
								"edits"
							]
						}
					},
					"response": [
						{
							"name": "List all edits for a folder",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/edits",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"edits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:30:18 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 0,\n    \"items\": []\n}"
						}
					]
				},
				{
					"name": "List all edits for a UserGroup",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/userGroups/{{user_group_id}}/edits",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"userGroups",
								"{{user_group_id}}",
								"edits"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all edits for a CatalogueUser",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/catalogueUsers/{{user_id_to_add_to_or_delete_from_group}}/edits",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"catalogueUsers",
								"{{user_id_to_add_to_or_delete_from_group}}",
								"edits"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Permissions",
			"item": [
				{
					"name": "List group roles for a folder ",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}/groupRoles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}",
								"groupRoles"
							]
						},
						"description": "Lists the group roles which are available to be assigned to the securable resource"
					},
					"response": [
						{
							"name": "List group roles for securable resource",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/folders/{{folder_id}}/groupRoles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders",
										"{{folder_id}}",
										"groupRoles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 11:37:49 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 6,\n    \"items\": [\n        {\n            \"id\": \"ffebc3af-f0c5-408b-b1c8-1508d067be47\",\n            \"name\": \"container_admin\",\n            \"displayName\": \"Container Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": false,\n            \"parent\": \"eae76d34-d520-4369-8f03-f4fcc0b8b61e\"\n        },\n        {\n            \"id\": \"2f8c23f3-8c0e-4920-8af7-505d8007c25b\",\n            \"name\": \"container_group_admin\",\n            \"displayName\": \"Container Group Administrator\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": true,\n            \"parent\": \"f686a892-8bcf-4bc8-82b3-208b174cd2e5\"\n        },\n        {\n            \"id\": \"f28580b5-97fe-4a02-bfd0-67f300eeeed5\",\n            \"name\": \"editor\",\n            \"displayName\": \"Editor\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": false,\n            \"parent\": \"ffebc3af-f0c5-408b-b1c8-1508d067be47\"\n        },\n        {\n            \"id\": \"8abca3f4-cdc3-451b-99f5-f548661dd1d3\",\n            \"name\": \"author\",\n            \"displayName\": \"Author\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": false,\n            \"parent\": \"f28580b5-97fe-4a02-bfd0-67f300eeeed5\"\n        },\n        {\n            \"id\": \"471d719a-dd51-4e45-a539-4e4d1e62a89b\",\n            \"name\": \"reviewer\",\n            \"displayName\": \"Reviewer\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": false,\n            \"parent\": \"8abca3f4-cdc3-451b-99f5-f548661dd1d3\"\n        },\n        {\n            \"id\": \"c7e04a3b-88c3-434f-80f2-2e8d82bfd4cd\",\n            \"name\": \"reader\",\n            \"displayName\": \"Reader\",\n            \"availableActions\": [],\n            \"createdBy\": \"mdm-security@maurodatamapper.com\",\n            \"applicationLevelRole\": false,\n            \"parent\": \"471d719a-dd51-4e45-a539-4e4d1e62a89b\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Tree",
			"item": [
				{
					"name": "Folder tree",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tree/folders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tree",
								"folders"
							]
						},
						"description": "Get the folder tree.\nThis contains all folders, and the models inside the folders in a tree structure, which are readable by the user"
					},
					"response": [
						{
							"name": "Folder tree - Multi-Nested",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tree/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tree",
										"folders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 13:47:00 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n        \"domainType\": \"Folder\",\n        \"label\": \"Development Folder\",\n        \"hasChildren\": true,\n        \"deleted\": false,\n        \"children\": [\n            {\n                \"id\": \"657ccffb-fd58-4d87-a36a-bb0b3fbab4e3\",\n                \"domainType\": \"Folder\",\n                \"label\": \"hic-nesciunt-reprehenderit\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"parentFolder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"children\": [\n                    {\n                        \"id\": \"9d25fef8-746b-4654-8648-494938b315d0\",\n                        \"domainType\": \"Folder\",\n                        \"label\": \"aspernatur-quam-facilis\",\n                        \"hasChildren\": false,\n                        \"deleted\": false,\n                        \"parentFolder\": \"657ccffb-fd58-4d87-a36a-bb0b3fbab4e3\"\n                    },\n                    {\n                        \"id\": \"73d6228b-ebe6-4f1f-9544-89e3dcea7ab2\",\n                        \"domainType\": \"Folder\",\n                        \"label\": \"soluta-rerum-sed\",\n                        \"hasChildren\": true,\n                        \"deleted\": false,\n                        \"parentFolder\": \"657ccffb-fd58-4d87-a36a-bb0b3fbab4e3\",\n                        \"children\": [\n                            {\n                                \"id\": \"dccfd96a-bbfc-4af5-99b9-2080a3b76a1e\",\n                                \"domainType\": \"DataModel\",\n                                \"label\": \"rem-ut-quia\",\n                                \"hasChildren\": false,\n                                \"deleted\": false,\n                                \"finalised\": false,\n                                \"superseded\": false,\n                                \"documentationVersion\": \"1.0.0\",\n                                \"folder\": \"73d6228b-ebe6-4f1f-9544-89e3dcea7ab2\",\n                                \"type\": \"DATA_STANDARD\"\n                            }\n                        ]\n                    },\n                    {\n                        \"id\": \"e9204957-b42c-435e-9a98-7e8238558611\",\n                        \"domainType\": \"DataModel\",\n                        \"label\": \"eligendi-voluptatibus-ea\",\n                        \"hasChildren\": false,\n                        \"deleted\": false,\n                        \"finalised\": false,\n                        \"superseded\": false,\n                        \"documentationVersion\": \"1.0.0\",\n                        \"folder\": \"657ccffb-fd58-4d87-a36a-bb0b3fbab4e3\",\n                        \"type\": \"DATA_ASSET\"\n                    },\n                    {\n                        \"id\": \"58dcc4eb-2e9a-4d43-b318-067a487518eb\",\n                        \"domainType\": \"DataModel\",\n                        \"label\": \"vel-iusto-ad\",\n                        \"hasChildren\": false,\n                        \"deleted\": false,\n                        \"finalised\": false,\n                        \"superseded\": false,\n                        \"documentationVersion\": \"1.0.0\",\n                        \"folder\": \"657ccffb-fd58-4d87-a36a-bb0b3fbab4e3\",\n                        \"type\": \"DATA_ASSET\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"c00bdf30-a8bc-42de-95e6-f23f715a83fd\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"Complex Test DataModel\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Standard\"\n            },\n            {\n                \"id\": \"cfa35775-5e49-437d-9fbe-d06ee6927624\",\n                \"domainType\": \"Terminology\",\n                \"label\": \"Complex Test Terminology\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Terminology\"\n            },\n            {\n                \"id\": \"5b3a3549-41ea-423a-a4d3-3224165addc8\",\n                \"domainType\": \"CodeSet\",\n                \"label\": \"Simple Test CodeSet\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": true,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"CodeSet\"\n            },\n            {\n                \"id\": \"8ff86efc-8c44-40a5-808a-bc7e0c492e73\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"Simple Test DataModel\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Standard\"\n            },\n            {\n                \"id\": \"4ebbbda7-fc9f-4cf0-809a-a4aabc74f68f\",\n                \"domainType\": \"Terminology\",\n                \"label\": \"Simple Test Terminology\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Terminology\"\n            },\n            {\n                \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"SourceFlowDataModel\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Asset\"\n            },\n            {\n                \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"TargetFlowDataModel\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Asset\"\n            },\n            {\n                \"id\": \"88d69a59-4404-43a9-afd3-5dc106340b9c\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"in-modi-distinctio\",\n                \"hasChildren\": false,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"DATA_ASSET\"\n            },\n            {\n                \"id\": \"cce93898-a17a-4cad-925a-609d3202adc2\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"perspiciatis-et-veritatis\",\n                \"hasChildren\": false,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"DATA_STANDARD\"\n            },\n            {\n                \"id\": \"c0c2dadd-d090-42c9-a365-804f333a2864\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"rerum-nulla-officiis\",\n                \"hasChildren\": false,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Standard\"\n            }\n        ]\n    }\n]"
						},
						{
							"name": "Folder tree",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tree/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tree",
										"folders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 12:05:25 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n        \"domainType\": \"Folder\",\n        \"label\": \"Development Folder\",\n        \"hasChildren\": true,\n        \"deleted\": false,\n        \"children\": [\n            {\n                \"id\": \"c00bdf30-a8bc-42de-95e6-f23f715a83fd\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"Complex Test DataModel\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Standard\"\n            },\n            {\n                \"id\": \"cfa35775-5e49-437d-9fbe-d06ee6927624\",\n                \"domainType\": \"Terminology\",\n                \"label\": \"Complex Test Terminology\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Terminology\"\n            },\n            {\n                \"id\": \"5b3a3549-41ea-423a-a4d3-3224165addc8\",\n                \"domainType\": \"CodeSet\",\n                \"label\": \"Simple Test CodeSet\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": true,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"CodeSet\"\n            },\n            {\n                \"id\": \"8ff86efc-8c44-40a5-808a-bc7e0c492e73\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"Simple Test DataModel\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Standard\"\n            },\n            {\n                \"id\": \"4ebbbda7-fc9f-4cf0-809a-a4aabc74f68f\",\n                \"domainType\": \"Terminology\",\n                \"label\": \"Simple Test Terminology\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Terminology\"\n            },\n            {\n                \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"SourceFlowDataModel\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Asset\"\n            },\n            {\n                \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"TargetFlowDataModel\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Asset\"\n            }\n        ]\n    }\n]"
						},
						{
							"name": "Folder tree - Nothing readable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tree/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tree",
										"folders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "JSESSIONID=C1181DC9B8AC14CD59E07E1A6629C7C3; Path=/; HttpOnly"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 30 Jul 2020 08:53:35 GMT"
								}
							],
							"cookie": [],
							"body": "[]"
						},
						{
							"name": "Folder tree - Nested Folders",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tree/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tree",
										"folders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 13:46:14 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n        \"domainType\": \"Folder\",\n        \"label\": \"Development Folder\",\n        \"hasChildren\": true,\n        \"deleted\": false,\n        \"children\": [\n            {\n                \"id\": \"657ccffb-fd58-4d87-a36a-bb0b3fbab4e3\",\n                \"domainType\": \"Folder\",\n                \"label\": \"hic-nesciunt-reprehenderit\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"parentFolder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"children\": [\n                    {\n                        \"id\": \"e9204957-b42c-435e-9a98-7e8238558611\",\n                        \"domainType\": \"DataModel\",\n                        \"label\": \"eligendi-voluptatibus-ea\",\n                        \"hasChildren\": false,\n                        \"deleted\": false,\n                        \"finalised\": false,\n                        \"superseded\": false,\n                        \"documentationVersion\": \"1.0.0\",\n                        \"folder\": \"657ccffb-fd58-4d87-a36a-bb0b3fbab4e3\",\n                        \"type\": \"DATA_ASSET\"\n                    },\n                    {\n                        \"id\": \"58dcc4eb-2e9a-4d43-b318-067a487518eb\",\n                        \"domainType\": \"DataModel\",\n                        \"label\": \"vel-iusto-ad\",\n                        \"hasChildren\": false,\n                        \"deleted\": false,\n                        \"finalised\": false,\n                        \"superseded\": false,\n                        \"documentationVersion\": \"1.0.0\",\n                        \"folder\": \"657ccffb-fd58-4d87-a36a-bb0b3fbab4e3\",\n                        \"type\": \"DATA_ASSET\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"c00bdf30-a8bc-42de-95e6-f23f715a83fd\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"Complex Test DataModel\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Standard\"\n            },\n            {\n                \"id\": \"cfa35775-5e49-437d-9fbe-d06ee6927624\",\n                \"domainType\": \"Terminology\",\n                \"label\": \"Complex Test Terminology\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Terminology\"\n            },\n            {\n                \"id\": \"5b3a3549-41ea-423a-a4d3-3224165addc8\",\n                \"domainType\": \"CodeSet\",\n                \"label\": \"Simple Test CodeSet\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": true,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"CodeSet\"\n            },\n            {\n                \"id\": \"8ff86efc-8c44-40a5-808a-bc7e0c492e73\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"Simple Test DataModel\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Standard\"\n            },\n            {\n                \"id\": \"4ebbbda7-fc9f-4cf0-809a-a4aabc74f68f\",\n                \"domainType\": \"Terminology\",\n                \"label\": \"Simple Test Terminology\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Terminology\"\n            },\n            {\n                \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"SourceFlowDataModel\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Asset\"\n            },\n            {\n                \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"TargetFlowDataModel\",\n                \"hasChildren\": true,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Asset\"\n            },\n            {\n                \"id\": \"88d69a59-4404-43a9-afd3-5dc106340b9c\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"in-modi-distinctio\",\n                \"hasChildren\": false,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"DATA_ASSET\"\n            },\n            {\n                \"id\": \"cce93898-a17a-4cad-925a-609d3202adc2\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"perspiciatis-et-veritatis\",\n                \"hasChildren\": false,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"DATA_STANDARD\"\n            },\n            {\n                \"id\": \"c0c2dadd-d090-42c9-a365-804f333a2864\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"rerum-nulla-officiis\",\n                \"hasChildren\": false,\n                \"deleted\": false,\n                \"finalised\": false,\n                \"superseded\": false,\n                \"documentationVersion\": \"1.0.0\",\n                \"folder\": \"6034e074-2b86-4d8f-a1a4-f7d7457cb1b8\",\n                \"type\": \"Data Standard\"\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Model Tree",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tree/dataModels/{{data_model_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tree",
								"dataModels",
								"{{data_model_id}}"
							]
						},
						"description": "Get the folder tree.\nThis contains all folders, and the models inside the folders in a tree structure, which are readable by the user"
					},
					"response": []
				}
			]
		},
		{
			"name": "Data Flows",
			"item": [
				{
					"name": "Data Class Components",
					"item": [
						{
							"name": "List all Data Class Components in a Data Flow",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}",
										"dataClassComponents"
									]
								}
							},
							"response": [
								{
									"name": "List all Data Class Components in a Data Flow",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataFlows",
												"{{data_flow_id}}",
												"dataClassComponents"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 09:56:55 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 2,\n    \"items\": [\n        {\n            \"id\": \"7321e957-9e6e-426a-ac74-6c7e1e77ddd6\",\n            \"domainType\": \"DataClassComponent\",\n            \"label\": \"aToD\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n                    \"label\": \"Sample DataFlow\",\n                    \"domainType\": \"DataFlow\"\n                }\n            ],\n            \"dataFlow\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"sourceDataClasses\": [\n                {\n                    \"id\": \"640a90f2-9b54-4c71-a216-4d3fdc2bd897\",\n                    \"domainType\": \"DataClass\",\n                    \"label\": \"tableA\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        }\n                    ]\n                }\n            ],\n            \"targetDataClasses\": [\n                {\n                    \"id\": \"992e24f3-0ae6-4c93-9fe0-8fbf25472cbf\",\n                    \"domainType\": \"DataClass\",\n                    \"label\": \"tableD\",\n                    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                            \"label\": \"TargetFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n            \"domainType\": \"DataClassComponent\",\n            \"label\": \"bAndCToE\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n                    \"label\": \"Sample DataFlow\",\n                    \"domainType\": \"DataFlow\"\n                }\n            ],\n            \"dataFlow\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"sourceDataClasses\": [\n                {\n                    \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"domainType\": \"DataClass\",\n                    \"label\": \"tableB\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        }\n                    ]\n                },\n                {\n                    \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                    \"domainType\": \"DataClass\",\n                    \"label\": \"tableC\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        }\n                    ]\n                }\n            ],\n            \"targetDataClasses\": [\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"domainType\": \"DataClass\",\n                    \"label\": \"tableE\",\n                    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                            \"label\": \"TargetFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Data Class Component by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}",
										"dataClassComponents",
										"{{data_class_component_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Get Data Class Components by ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataFlows",
												"{{data_flow_id}}",
												"dataClassComponents",
												"{{data_class_component_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 09:58:13 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n    \"domainType\": \"DataClassComponent\",\n    \"label\": \"bAndCToE\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        },\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"label\": \"Sample DataFlow\",\n            \"domainType\": \"DataFlow\"\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T09:00:41.147Z\",\n    \"definition\": \"INSERT INTO TargetFlowDataModel.tableE\\nSELECT  \\n    b.columnE1                                      AS columnE,\\n    b.columnF                                       AS columnR,\\n    CONCAT(b.columnG,'_',c.columnJ)                 AS columnS,\\n    CASE\\n        WHEN b.columnH IS NULL THEN b.columnI\\n        ELSE b.columnH\\n    END                                             AS columnT,\\n    TRIM(c.columnJ)                                 AS columnU,\\n    CONCAT(c.columnL,' ',c.columnM,'--',b.columnG)  AS columnV\\nFROM SourceFlowDataModel.tableB b\\nINNER JOIN SourceFlowDataModel.tableC c ON b.columnE1 = c.columnE2\",\n    \"dataFlow\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n    \"sourceDataClasses\": [\n        {\n            \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableB\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        },\n        {\n            \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableC\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        }\n    ],\n    \"targetDataClasses\": [\n        {\n            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableE\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Add target Data Class to Data Class Component",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/target/{{data_class_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}",
										"dataClassComponents",
										"{{data_class_component_id}}",
										"target",
										"{{data_class_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Add target Data Class to Data Class Component",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/target/{{data_class_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataFlows",
												"{{data_flow_id}}",
												"dataClassComponents",
												"{{data_class_component_id}}",
												"target",
												"{{data_class_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataClassComponent/show/3e671163-e824-455a-9882-1e88b8717fd5"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 10:12:24 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n    \"domainType\": \"DataClassComponent\",\n    \"label\": \"bAndCToE\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        },\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"label\": \"Sample DataFlow\",\n            \"domainType\": \"DataFlow\"\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T10:12:24.608Z\",\n    \"definition\": \"INSERT INTO TargetFlowDataModel.tableE\\nSELECT  \\n    b.columnE1                                      AS columnE,\\n    b.columnF                                       AS columnR,\\n    CONCAT(b.columnG,'_',c.columnJ)                 AS columnS,\\n    CASE\\n        WHEN b.columnH IS NULL THEN b.columnI\\n        ELSE b.columnH\\n    END                                             AS columnT,\\n    TRIM(c.columnJ)                                 AS columnU,\\n    CONCAT(c.columnL,' ',c.columnM,'--',b.columnG)  AS columnV\\nFROM SourceFlowDataModel.tableB b\\nINNER JOIN SourceFlowDataModel.tableC c ON b.columnE1 = c.columnE2\",\n    \"dataFlow\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n    \"sourceDataClasses\": [\n        {\n            \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableC\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        },\n        {\n            \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableB\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        }\n    ],\n    \"targetDataClasses\": [\n        {\n            \"id\": \"992e24f3-0ae6-4c93-9fe0-8fbf25472cbf\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableD\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        },\n        {\n            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableE\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Remove target Data Class from Data Class Component",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/target/{{data_class_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}",
										"dataClassComponents",
										"{{data_class_component_id}}",
										"target",
										"{{data_class_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Remove target Data Class from Data Class Component",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/target/{{data_class_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataFlows",
												"{{data_flow_id}}",
												"dataClassComponents",
												"{{data_class_component_id}}",
												"target",
												"{{data_class_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataClassComponent/show/3e671163-e824-455a-9882-1e88b8717fd5"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 10:13:06 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n    \"domainType\": \"DataClassComponent\",\n    \"label\": \"bAndCToE\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        },\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"label\": \"Sample DataFlow\",\n            \"domainType\": \"DataFlow\"\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T10:13:06.348Z\",\n    \"definition\": \"INSERT INTO TargetFlowDataModel.tableE\\nSELECT  \\n    b.columnE1                                      AS columnE,\\n    b.columnF                                       AS columnR,\\n    CONCAT(b.columnG,'_',c.columnJ)                 AS columnS,\\n    CASE\\n        WHEN b.columnH IS NULL THEN b.columnI\\n        ELSE b.columnH\\n    END                                             AS columnT,\\n    TRIM(c.columnJ)                                 AS columnU,\\n    CONCAT(c.columnL,' ',c.columnM,'--',b.columnG)  AS columnV\\nFROM SourceFlowDataModel.tableB b\\nINNER JOIN SourceFlowDataModel.tableC c ON b.columnE1 = c.columnE2\",\n    \"dataFlow\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n    \"sourceDataClasses\": [\n        {\n            \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableB\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        },\n        {\n            \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableC\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        }\n    ],\n    \"targetDataClasses\": [\n        {\n            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableE\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Add source Data Class to Data Class Component",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/source/{{data_class_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}",
										"dataClassComponents",
										"{{data_class_component_id}}",
										"source",
										"{{data_class_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Add source Data Class to Data Class Component",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/source/{{data_class_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataFlows",
												"{{data_flow_id}}",
												"dataClassComponents",
												"{{data_class_component_id}}",
												"source",
												"{{data_class_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataClassComponent/show/3e671163-e824-455a-9882-1e88b8717fd5"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 10:14:31 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n    \"domainType\": \"DataClassComponent\",\n    \"label\": \"bAndCToE\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        },\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"label\": \"Sample DataFlow\",\n            \"domainType\": \"DataFlow\"\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T10:14:31.64Z\",\n    \"definition\": \"INSERT INTO TargetFlowDataModel.tableE\\nSELECT  \\n    b.columnE1                                      AS columnE,\\n    b.columnF                                       AS columnR,\\n    CONCAT(b.columnG,'_',c.columnJ)                 AS columnS,\\n    CASE\\n        WHEN b.columnH IS NULL THEN b.columnI\\n        ELSE b.columnH\\n    END                                             AS columnT,\\n    TRIM(c.columnJ)                                 AS columnU,\\n    CONCAT(c.columnL,' ',c.columnM,'--',b.columnG)  AS columnV\\nFROM SourceFlowDataModel.tableB b\\nINNER JOIN SourceFlowDataModel.tableC c ON b.columnE1 = c.columnE2\",\n    \"dataFlow\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n    \"sourceDataClasses\": [\n        {\n            \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableB\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        },\n        {\n            \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableC\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        },\n        {\n            \"id\": \"640a90f2-9b54-4c71-a216-4d3fdc2bd897\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableA\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        }\n    ],\n    \"targetDataClasses\": [\n        {\n            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableE\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Remove source Data Class from Data Class Component",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/source/{{data_class_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}",
										"dataClassComponents",
										"{{data_class_component_id}}",
										"source",
										"{{data_class_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Remove source Data Class from Data Class Component",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/source/{{data_class_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataFlows",
												"{{data_flow_id}}",
												"dataClassComponents",
												"{{data_class_component_id}}",
												"source",
												"{{data_class_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataClassComponent/show/3e671163-e824-455a-9882-1e88b8717fd5"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 10:14:48 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n    \"domainType\": \"DataClassComponent\",\n    \"label\": \"bAndCToE\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        },\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"label\": \"Sample DataFlow\",\n            \"domainType\": \"DataFlow\"\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T10:14:47.989Z\",\n    \"definition\": \"INSERT INTO TargetFlowDataModel.tableE\\nSELECT  \\n    b.columnE1                                      AS columnE,\\n    b.columnF                                       AS columnR,\\n    CONCAT(b.columnG,'_',c.columnJ)                 AS columnS,\\n    CASE\\n        WHEN b.columnH IS NULL THEN b.columnI\\n        ELSE b.columnH\\n    END                                             AS columnT,\\n    TRIM(c.columnJ)                                 AS columnU,\\n    CONCAT(c.columnL,' ',c.columnM,'--',b.columnG)  AS columnV\\nFROM SourceFlowDataModel.tableB b\\nINNER JOIN SourceFlowDataModel.tableC c ON b.columnE1 = c.columnE2\",\n    \"dataFlow\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n    \"sourceDataClasses\": [\n        {\n            \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableB\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        },\n        {\n            \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableC\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        }\n    ],\n    \"targetDataClasses\": [\n        {\n            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"domainType\": \"DataClass\",\n            \"label\": \"tableE\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Data Element Components",
					"item": [
						{
							"name": "List all Data Element Components in Data Class Component",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/dataElementComponents",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}",
										"dataClassComponents",
										"{{data_class_component_id}}",
										"dataElementComponents"
									]
								}
							},
							"response": [
								{
									"name": "List all Data Element Components",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/dataElementComponents",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataFlows",
												"{{data_flow_id}}",
												"dataClassComponents",
												"{{data_class_component_id}}",
												"dataElementComponents"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 09:58:40 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 6,\n    \"items\": [\n        {\n            \"id\": \"8229d144-b022-4718-876a-b9c7c4695622\",\n            \"domainType\": \"DataElementComponent\",\n            \"label\": \"JOIN KEY\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n                    \"label\": \"Sample DataFlow\",\n                    \"domainType\": \"DataFlow\"\n                },\n                {\n                    \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n                    \"label\": \"bAndCToE\",\n                    \"domainType\": \"DataClassComponent\"\n                }\n            ],\n            \"dataClassComponent\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n            \"sourceDataElements\": [\n                {\n                    \"id\": \"67ee4008-86dc-4de0-baeb-0aea6a6ba163\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnE1\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                            \"label\": \"tableB\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n                },\n                {\n                    \"id\": \"cf3f4ce8-947b-4ba5-90cc-2200502b75e3\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnE2\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                            \"label\": \"tableC\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                    \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n                }\n            ],\n            \"targetDataElements\": [\n                {\n                    \"id\": \"3d212c82-5634-45a1-b250-0e2e49ad0ccb\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnE\",\n                    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                            \"label\": \"TargetFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                            \"label\": \"tableE\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"dataType\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\"\n                }\n            ]\n        },\n        {\n            \"id\": \"6d4a5289-fb19-4511-8a74-e10c9f1ddb42\",\n            \"domainType\": \"DataElementComponent\",\n            \"label\": \"Direct Copy\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n                    \"label\": \"Sample DataFlow\",\n                    \"domainType\": \"DataFlow\"\n                },\n                {\n                    \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n                    \"label\": \"bAndCToE\",\n                    \"domainType\": \"DataClassComponent\"\n                }\n            ],\n            \"dataClassComponent\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n            \"sourceDataElements\": [\n                {\n                    \"id\": \"6fdf65e7-e1c6-4320-a875-a00dfcf6b005\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnF\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                            \"label\": \"tableB\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n                }\n            ],\n            \"targetDataElements\": [\n                {\n                    \"id\": \"5c835c0c-b53b-4d93-9def-7771a1185852\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnR\",\n                    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                            \"label\": \"TargetFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                            \"label\": \"tableE\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"dataType\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\"\n                }\n            ]\n        },\n        {\n            \"id\": \"fddc5cb4-435d-46c8-a23c-45dad4f94db2\",\n            \"domainType\": \"DataElementComponent\",\n            \"label\": \"CONCAT\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n                    \"label\": \"Sample DataFlow\",\n                    \"domainType\": \"DataFlow\"\n                },\n                {\n                    \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n                    \"label\": \"bAndCToE\",\n                    \"domainType\": \"DataClassComponent\"\n                }\n            ],\n            \"dataClassComponent\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n            \"sourceDataElements\": [\n                {\n                    \"id\": \"00dc8fed-abb0-41bd-9486-476d97872923\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnJ\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                            \"label\": \"tableC\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                    \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n                },\n                {\n                    \"id\": \"e4d0b02d-55b0-4ef5-888f-287a68fbb927\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnG\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                            \"label\": \"tableB\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"dataType\": \"21f70c83-8173-4945-9e26-73fb11e6d48d\"\n                }\n            ],\n            \"targetDataElements\": [\n                {\n                    \"id\": \"82633209-27f6-4507-a811-db9d70a0f90f\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnS\",\n                    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                            \"label\": \"TargetFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                            \"label\": \"tableE\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"dataType\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\"\n                }\n            ]\n        },\n        {\n            \"id\": \"253aa16b-bd46-410f-b945-ac91a64607f2\",\n            \"domainType\": \"DataElementComponent\",\n            \"label\": \"CASE\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n                    \"label\": \"Sample DataFlow\",\n                    \"domainType\": \"DataFlow\"\n                },\n                {\n                    \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n                    \"label\": \"bAndCToE\",\n                    \"domainType\": \"DataClassComponent\"\n                }\n            ],\n            \"dataClassComponent\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n            \"sourceDataElements\": [\n                {\n                    \"id\": \"c072d7f4-0e9e-4849-8c0c-9346ddb7eb7e\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnI\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                            \"label\": \"tableB\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"dataType\": \"21f70c83-8173-4945-9e26-73fb11e6d48d\"\n                },\n                {\n                    \"id\": \"4e9435d7-036c-407d-8b37-547e22fe957a\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnH\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                            \"label\": \"tableB\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n                }\n            ],\n            \"targetDataElements\": [\n                {\n                    \"id\": \"dd6c059a-e2aa-43cf-b190-72fc619620ac\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnT\",\n                    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                            \"label\": \"TargetFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                            \"label\": \"tableE\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"dataType\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\"\n                }\n            ]\n        },\n        {\n            \"id\": \"8403fd23-eec8-42d6-a386-cd5f6f80d584\",\n            \"domainType\": \"DataElementComponent\",\n            \"label\": \"TRIM\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n                    \"label\": \"Sample DataFlow\",\n                    \"domainType\": \"DataFlow\"\n                },\n                {\n                    \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n                    \"label\": \"bAndCToE\",\n                    \"domainType\": \"DataClassComponent\"\n                }\n            ],\n            \"dataClassComponent\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n            \"sourceDataElements\": [\n                {\n                    \"id\": \"00dc8fed-abb0-41bd-9486-476d97872923\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnJ\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                            \"label\": \"tableC\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                    \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n                }\n            ],\n            \"targetDataElements\": [\n                {\n                    \"id\": \"95445e14-d9c6-4fb3-aaa3-f22e59e83558\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnU\",\n                    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                            \"label\": \"TargetFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                            \"label\": \"tableE\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"dataType\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\"\n                }\n            ]\n        },\n        {\n            \"id\": \"c3dd6bbd-1b62-4f50-b8e8-d0f56d3c8501\",\n            \"domainType\": \"DataElementComponent\",\n            \"label\": \"CONCAT\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n                    \"label\": \"Sample DataFlow\",\n                    \"domainType\": \"DataFlow\"\n                },\n                {\n                    \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n                    \"label\": \"bAndCToE\",\n                    \"domainType\": \"DataClassComponent\"\n                }\n            ],\n            \"dataClassComponent\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n            \"sourceDataElements\": [\n                {\n                    \"id\": \"e4d0b02d-55b0-4ef5-888f-287a68fbb927\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnG\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                            \"label\": \"tableB\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"dataType\": \"21f70c83-8173-4945-9e26-73fb11e6d48d\"\n                },\n                {\n                    \"id\": \"40a78bce-a4d3-4fb1-bc34-f91569801c85\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnL\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                            \"label\": \"tableC\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                    \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n                },\n                {\n                    \"id\": \"16b5c5d1-07cd-401d-9448-f782a7af7022\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnM\",\n                    \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                            \"label\": \"SourceFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                            \"label\": \"tableC\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                    \"dataType\": \"21f70c83-8173-4945-9e26-73fb11e6d48d\"\n                }\n            ],\n            \"targetDataElements\": [\n                {\n                    \"id\": \"bb190237-9da5-4953-ac3b-080e1b641906\",\n                    \"domainType\": \"DataElement\",\n                    \"label\": \"columnV\",\n                    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"breadcrumbs\": [\n                        {\n                            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                            \"label\": \"TargetFlowDataModel\",\n                            \"domainType\": \"DataModel\",\n                            \"finalised\": false\n                        },\n                        {\n                            \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                            \"label\": \"tableE\",\n                            \"domainType\": \"DataClass\"\n                        }\n                    ],\n                    \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"dataType\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\"\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Data Element Component by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/dataElementComponents/{{data_element_component_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}",
										"dataClassComponents",
										"{{data_class_component_id}}",
										"dataElementComponents",
										"{{data_element_component_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Get Data Element Components by ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/dataElementComponents/{{data_element_component_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataFlows",
												"{{data_flow_id}}",
												"dataClassComponents",
												"{{data_class_component_id}}",
												"dataElementComponents",
												"{{data_element_component_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 09:59:58 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"8229d144-b022-4718-876a-b9c7c4695622\",\n    \"domainType\": \"DataElementComponent\",\n    \"label\": \"JOIN KEY\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        },\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"label\": \"Sample DataFlow\",\n            \"domainType\": \"DataFlow\"\n        },\n        {\n            \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n            \"label\": \"bAndCToE\",\n            \"domainType\": \"DataClassComponent\"\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T09:00:41.149Z\",\n    \"definition\": null,\n    \"dataClassComponent\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n    \"sourceDataElements\": [\n        {\n            \"id\": \"67ee4008-86dc-4de0-baeb-0aea6a6ba163\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnE1\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"label\": \"tableB\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n            \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n        },\n        {\n            \"id\": \"cf3f4ce8-947b-4ba5-90cc-2200502b75e3\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnE2\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                    \"label\": \"tableC\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n            \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n        }\n    ],\n    \"targetDataElements\": [\n        {\n            \"id\": \"3d212c82-5634-45a1-b250-0e2e49ad0ccb\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnE\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"label\": \"tableE\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"dataType\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Add target Data Element to Data Element Component",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/dataElementComponents/{{data_element_component_id}}/target/{{data_element_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}",
										"dataClassComponents",
										"{{data_class_component_id}}",
										"dataElementComponents",
										"{{data_element_component_id}}",
										"target",
										"{{data_element_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Add target Data Element to Data Element Component",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/dataElementComponents/{{data_element_component_id}}/target/{{data_element_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataFlows",
												"{{data_flow_id}}",
												"dataClassComponents",
												"{{data_class_component_id}}",
												"dataElementComponents",
												"{{data_element_component_id}}",
												"target",
												"{{data_element_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataElementComponent/show/8229d144-b022-4718-876a-b9c7c4695622"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 10:10:09 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"8229d144-b022-4718-876a-b9c7c4695622\",\n    \"domainType\": \"DataElementComponent\",\n    \"label\": \"JOIN KEY\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        },\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"label\": \"Sample DataFlow\",\n            \"domainType\": \"DataFlow\"\n        },\n        {\n            \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n            \"label\": \"bAndCToE\",\n            \"domainType\": \"DataClassComponent\"\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T10:10:08.737Z\",\n    \"definition\": null,\n    \"dataClassComponent\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n    \"sourceDataElements\": [\n        {\n            \"id\": \"67ee4008-86dc-4de0-baeb-0aea6a6ba163\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnE1\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"label\": \"tableB\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n            \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n        },\n        {\n            \"id\": \"cf3f4ce8-947b-4ba5-90cc-2200502b75e3\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnE2\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                    \"label\": \"tableC\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n            \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n        }\n    ],\n    \"targetDataElements\": [\n        {\n            \"id\": \"3d212c82-5634-45a1-b250-0e2e49ad0ccb\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnE\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"label\": \"tableE\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"dataType\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\"\n        },\n        {\n            \"id\": \"5c835c0c-b53b-4d93-9def-7771a1185852\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnR\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"label\": \"tableE\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"dataType\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Remove target Data Element from Data Element Component",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/dataElementComponents/{{data_element_component_id}}/target/{{data_element_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}",
										"dataClassComponents",
										"{{data_class_component_id}}",
										"dataElementComponents",
										"{{data_element_component_id}}",
										"target",
										"{{data_element_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Remove target Data Element from Data Element Component",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/dataElementComponents/{{data_element_component_id}}/target/{{data_element_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataFlows",
												"{{data_flow_id}}",
												"dataClassComponents",
												"{{data_class_component_id}}",
												"dataElementComponents",
												"{{data_element_component_id}}",
												"target",
												"{{data_element_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataElementComponent/show/8229d144-b022-4718-876a-b9c7c4695622"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 10:10:46 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"8229d144-b022-4718-876a-b9c7c4695622\",\n    \"domainType\": \"DataElementComponent\",\n    \"label\": \"JOIN KEY\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        },\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"label\": \"Sample DataFlow\",\n            \"domainType\": \"DataFlow\"\n        },\n        {\n            \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n            \"label\": \"bAndCToE\",\n            \"domainType\": \"DataClassComponent\"\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T10:10:46.899Z\",\n    \"definition\": null,\n    \"dataClassComponent\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n    \"sourceDataElements\": [\n        {\n            \"id\": \"cf3f4ce8-947b-4ba5-90cc-2200502b75e3\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnE2\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n                    \"label\": \"tableC\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"e27e7c6c-7f5f-4216-b202-6c8122451ef8\",\n            \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n        },\n        {\n            \"id\": \"67ee4008-86dc-4de0-baeb-0aea6a6ba163\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnE1\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"label\": \"tableB\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n            \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n        }\n    ],\n    \"targetDataElements\": [\n        {\n            \"id\": \"3d212c82-5634-45a1-b250-0e2e49ad0ccb\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnE\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"label\": \"tableE\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"dataType\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Add source Data Element to Data Element Component",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/dataElementComponents/{{data_element_component_id}}/source/{{data_element_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}",
										"dataClassComponents",
										"{{data_class_component_id}}",
										"dataElementComponents",
										"{{data_element_component_id}}",
										"source",
										"{{data_element_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Add source Data Element to Data Element Component",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/dataElementComponents/{{data_element_component_id}}/source/{{data_element_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataFlows",
												"{{data_flow_id}}",
												"dataClassComponents",
												"{{data_class_component_id}}",
												"dataElementComponents",
												"{{data_element_component_id}}",
												"source",
												"{{data_element_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataElementComponent/show/6d4a5289-fb19-4511-8a74-e10c9f1ddb42"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 10:17:38 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"6d4a5289-fb19-4511-8a74-e10c9f1ddb42\",\n    \"domainType\": \"DataElementComponent\",\n    \"label\": \"Direct Copy\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        },\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"label\": \"Sample DataFlow\",\n            \"domainType\": \"DataFlow\"\n        },\n        {\n            \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n            \"label\": \"bAndCToE\",\n            \"domainType\": \"DataClassComponent\"\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T10:17:38.895Z\",\n    \"definition\": null,\n    \"dataClassComponent\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n    \"sourceDataElements\": [\n        {\n            \"id\": \"6fdf65e7-e1c6-4320-a875-a00dfcf6b005\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnF\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"label\": \"tableB\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n            \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n        },\n        {\n            \"id\": \"e4d0b02d-55b0-4ef5-888f-287a68fbb927\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnG\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"label\": \"tableB\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n            \"dataType\": \"21f70c83-8173-4945-9e26-73fb11e6d48d\"\n        }\n    ],\n    \"targetDataElements\": [\n        {\n            \"id\": \"5c835c0c-b53b-4d93-9def-7771a1185852\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnR\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"label\": \"tableE\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"dataType\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Remove source Data Element from Data Element Component",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/dataElementComponents/{{data_element_component_id}}/source/{{data_element_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}",
										"dataClassComponents",
										"{{data_class_component_id}}",
										"dataElementComponents",
										"{{data_element_component_id}}",
										"source",
										"{{data_element_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Remove source Data Element from Data Element Component",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}/dataClassComponents/{{data_class_component_id}}/dataElementComponents/{{data_element_component_id}}/source/{{data_element_id}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"dataModels",
												"{{data_model_id}}",
												"dataFlows",
												"{{data_flow_id}}",
												"dataClassComponents",
												"{{data_class_component_id}}",
												"dataElementComponents",
												"{{data_element_component_id}}",
												"source",
												"{{data_element_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "http://localhost:8080/dataElementComponent/show/6d4a5289-fb19-4511-8a74-e10c9f1ddb42"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 05 Aug 2020 10:18:04 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"6d4a5289-fb19-4511-8a74-e10c9f1ddb42\",\n    \"domainType\": \"DataElementComponent\",\n    \"label\": \"Direct Copy\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        },\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"label\": \"Sample DataFlow\",\n            \"domainType\": \"DataFlow\"\n        },\n        {\n            \"id\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n            \"label\": \"bAndCToE\",\n            \"domainType\": \"DataClassComponent\"\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T10:18:04.099Z\",\n    \"definition\": null,\n    \"dataClassComponent\": \"3e671163-e824-455a-9882-1e88b8717fd5\",\n    \"sourceDataElements\": [\n        {\n            \"id\": \"6fdf65e7-e1c6-4320-a875-a00dfcf6b005\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnF\",\n            \"model\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                    \"label\": \"SourceFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n                    \"label\": \"tableB\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"08e2de4f-cf3c-4c17-9c00-d48ed12efdea\",\n            \"dataType\": \"b6ad7711-3211-488d-9bf7-047f28ed2b69\"\n        }\n    ],\n    \"targetDataElements\": [\n        {\n            \"id\": \"5c835c0c-b53b-4d93-9def-7771a1185852\",\n            \"domainType\": \"DataElement\",\n            \"label\": \"columnR\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                },\n                {\n                    \"id\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n                    \"label\": \"tableE\",\n                    \"domainType\": \"DataClass\"\n                }\n            ],\n            \"dataClass\": \"db5cba45-4d7f-4cc5-b792-ce753ae68b79\",\n            \"dataType\": \"fe99cb86-ee71-4ea5-ad4e-3f57fea1fa10\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List Data Flows relative to target Data Model",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}",
								"dataFlows"
							]
						},
						"description": "This will list the entire chain of readable DataFlows from the provided data_model_id forwards and backwards"
					},
					"response": [
						{
							"name": "List Data Flows relative to target Data Model",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 09:51:34 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 1,\n    \"items\": [\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"domainType\": \"DataFlow\",\n            \"label\": \"Sample DataFlow\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ],\n            \"source\": {\n                \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"SourceFlowDataModel\",\n                \"type\": \"Data Asset\"\n            },\n            \"target\": {\n                \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"TargetFlowDataModel\",\n                \"type\": \"Data Asset\"\n            },\n            \"diagramLayout\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List Data Flows where Data Model is source",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows?type=source",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}",
								"dataFlows"
							],
							"query": [
								{
									"key": "type",
									"value": "source"
								}
							]
						}
					},
					"response": [
						{
							"name": "List Data Flows where Data Model is source",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/e1758894-f8bf-4489-bf78-5f8177dabb1a/dataFlows?type=source",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"e1758894-f8bf-4489-bf78-5f8177dabb1a",
										"dataFlows"
									],
									"query": [
										{
											"key": "type",
											"value": "source"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 09:54:48 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 1,\n    \"items\": [\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"domainType\": \"DataFlow\",\n            \"label\": \"Sample DataFlow\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ],\n            \"source\": {\n                \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"SourceFlowDataModel\",\n                \"type\": \"Data Asset\"\n            },\n            \"target\": {\n                \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"TargetFlowDataModel\",\n                \"type\": \"Data Asset\"\n            },\n            \"diagramLayout\": null\n        }\n    ]\n}"
						},
						{
							"name": "List Data Flows where Data Model is source - none found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows?type=source",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows"
									],
									"query": [
										{
											"key": "type",
											"value": "source"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 09:52:59 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 0,\n    \"items\": []\n}"
						}
					]
				},
				{
					"name": "List Data Flows where Data Model is target",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows?type=source",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}",
								"dataFlows"
							],
							"query": [
								{
									"key": "type",
									"value": "source"
								}
							]
						}
					},
					"response": [
						{
							"name": "List Data Flows where Data Model is target",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows?type=target",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows"
									],
									"query": [
										{
											"key": "type",
											"value": "target"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 09:54:05 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 1,\n    \"items\": [\n        {\n            \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n            \"domainType\": \"DataFlow\",\n            \"label\": \"Sample DataFlow\",\n            \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"breadcrumbs\": [\n                {\n                    \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                    \"label\": \"TargetFlowDataModel\",\n                    \"domainType\": \"DataModel\",\n                    \"finalised\": false\n                }\n            ],\n            \"source\": {\n                \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"SourceFlowDataModel\",\n                \"type\": \"Data Asset\"\n            },\n            \"target\": {\n                \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n                \"domainType\": \"DataModel\",\n                \"label\": \"TargetFlowDataModel\",\n                \"type\": \"Data Asset\"\n            },\n            \"diagramLayout\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Data Flow by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}",
								"dataFlows",
								"{{data_flow_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get Data Flow by ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/dataFlows/{{data_flow_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"dataFlows",
										"{{data_flow_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 05 Aug 2020 09:56:21 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"6aea52f1-bea5-4044-a9de-e175a5251ccf\",\n    \"domainType\": \"DataFlow\",\n    \"label\": \"Sample DataFlow\",\n    \"model\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n    \"breadcrumbs\": [\n        {\n            \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n            \"label\": \"TargetFlowDataModel\",\n            \"domainType\": \"DataModel\",\n            \"finalised\": false\n        }\n    ],\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"editDescription\",\n        \"update\",\n        \"save\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-05T09:00:41.27Z\",\n    \"definition\": null,\n    \"source\": {\n        \"id\": \"e1758894-f8bf-4489-bf78-5f8177dabb1a\",\n        \"domainType\": \"DataModel\",\n        \"label\": \"SourceFlowDataModel\",\n        \"type\": \"Data Asset\"\n    },\n    \"target\": {\n        \"id\": \"5c90bdbb-75b3-49f2-84bb-3c37f3b6b936\",\n        \"domainType\": \"DataModel\",\n        \"label\": \"TargetFlowDataModel\",\n        \"type\": \"Data Asset\"\n    },\n    \"diagramLayout\": null\n}"
						}
					]
				}
			]
		},
		{
			"name": "Paths",
			"item": [
				{
					"name": "Path dm:|dc:simple|de:simple data element",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/{{data_model_id}}/path/dm%3A%7Cdc%3Asimple%7Cde%3Asimple%20data%20element",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"{{data_model_id}}",
								"path",
								"dm%3A%7Cdc%3Asimple%7Cde%3Asimple%20data%20element"
							]
						},
						"description": "Checks path on current DataModel\n"
					},
					"response": []
				},
				{
					"name": "Path dm:Simple Test DataModel|dc:simple|de:simple data element",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataModels/path/dm%3ASimple%20Test%20DataModel%7Cdc%3Asimple%7Cde%3Asimple%20data%20element",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataModels",
								"path",
								"dm%3ASimple%20Test%20DataModel%7Cdc%3Asimple%7Cde%3Asimple%20data%20element"
							]
						},
						"description": "Checks path on labelled DataModel\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Reference Data Models",
			"item": [
				{
					"name": "Reference Data Elements",
					"item": [
						{
							"name": "List Reference Data Elements for a Reference Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/referenceDataElements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"referenceDataElements"
									]
								},
								"description": "List Reference Data Elements for a Reference Data Model"
							},
							"response": []
						},
						{
							"name": "Get a Reference Data Element for a Reference Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/referenceDataElements/{{reference_data_element_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"referenceDataElements",
										"{{reference_data_element_id}}"
									]
								},
								"description": "Get a Reference Data Element for a Reference Data Model"
							},
							"response": []
						},
						{
							"name": "Create a Reference Data Element for a Reference Data Model",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"A new Reference Data Element {{$randomLoremSlug}}\",\n    \"referenceDataType\": \"{{reference_data_type_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/referenceDataElements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"referenceDataElements"
									]
								},
								"description": "Create a Reference Data Element for a Reference Data Model"
							},
							"response": []
						},
						{
							"name": "Update a Reference Data Element for a Reference Data Model",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"Updated Organisation name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/referenceDataElements/{{reference_data_element_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"referenceDataElements",
										"{{reference_data_element_id}}"
									]
								},
								"description": "Get a Reference Data Element for a Reference Data Model"
							},
							"response": []
						}
					]
				},
				{
					"name": "Reference Data Types",
					"item": [
						{
							"name": "List Reference Data Types for a Reference Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/referenceDataTypes",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"referenceDataTypes"
									]
								},
								"description": "List Reference Data Types for a Reference Data Model"
							},
							"response": []
						},
						{
							"name": "Get a Reference Data Type for a Reference Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/referenceDataTypes/{{reference_data_type_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"referenceDataTypes",
										"{{reference_data_type_id}}"
									]
								},
								"description": "Get a Reference Data Type for a Reference Data Model"
							},
							"response": []
						},
						{
							"name": "Create a Reference Data Type for a Reference Data Model",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"A new Reference Data Type {{$randomLoremSlug}}\",\n \"domainType\":\"ReferencePrimitiveType\",\n   \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/referenceDataTypes",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"referenceDataTypes"
									]
								},
								"description": "Create a Reference Data Type for a Reference Data Model"
							},
							"response": []
						},
						{
							"name": "Update a Reference Data Type for a Reference Data Model",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"Updated label {{$randomLoremSlug}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/referenceDataTypes/{{reference_data_type_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"referenceDataTypes",
										"{{reference_data_type_id}}"
									]
								},
								"description": "Update a Reference Data Type for a Reference Data Model"
							},
							"response": []
						}
					]
				},
				{
					"name": "Reference Data Values",
					"item": [
						{
							"name": "List Reference Data Values for a Reference Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/referenceDataValues",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"referenceDataValues"
									]
								},
								"description": "List Reference Data Values for a Reference Data Model"
							},
							"response": []
						},
						{
							"name": "List Reference Data Values - formatted as rows - for a Reference Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/referenceDataValues?asRows=true",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"referenceDataValues"
									],
									"query": [
										{
											"key": "asRows",
											"value": "true"
										}
									]
								},
								"description": "List Reference Data Values - formatted as rows - for a Reference Data Model"
							},
							"response": []
						},
						{
							"name": "Search Reference Data Values - formatted as rows - for a Reference Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/referenceDataValues/search?asRows=true&search=Org",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"referenceDataValues",
										"search"
									],
									"query": [
										{
											"key": "asRows",
											"value": "true"
										},
										{
											"key": "search",
											"value": "Org"
										}
									]
								},
								"description": "Search Reference Data Values - formatted as rows - for a Reference Data Model"
							},
							"response": []
						},
						{
							"name": "Get a Reference Data Value for a Reference Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/referenceDataValues/{{reference_data_value_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"referenceDataValues",
										"{{reference_data_value_id}}"
									]
								},
								"description": "Get a Reference Data Value for a Reference Data Model"
							},
							"response": []
						}
					]
				},
				{
					"name": "Import / Export",
					"item": [
						{
							"name": "List Reference Data Model Importers",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/referenceDataModels/providers/importers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"providers",
										"importers"
									]
								},
								"description": "List Reference Data Model Importers"
							},
							"response": []
						},
						{
							"name": "List Reference Data Model Exporters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/referenceDataModels/providers/exporters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"providers",
										"exporters"
									]
								},
								"description": "List Reference Data Model Exporters"
							},
							"response": []
						},
						{
							"name": "JSON Export Reference Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/export/uk.ac.ox.softeng.maurodatamapper.referencedata.provider.exporter/JsonExporterService/3.0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"export",
										"uk.ac.ox.softeng.maurodatamapper.referencedata.provider.exporter",
										"JsonExporterService",
										"3.0"
									]
								},
								"description": "JSON Export Reference Data Model"
							},
							"response": []
						},
						{
							"name": "XML Export Reference Data Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}/export/uk.ac.ox.softeng.maurodatamapper.referencedata.provider.exporter/XmlExporterService/3.0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"referenceDataModels",
										"{{reference_data_model_id}}",
										"export",
										"uk.ac.ox.softeng.maurodatamapper.referencedata.provider.exporter",
										"XmlExporterService",
										"3.0"
									]
								},
								"description": "XML Export Reference Data Model"
							},
							"response": []
						}
					]
				},
				{
					"name": "List all Reference Data Models",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/referenceDataModels",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"referenceDataModels"
							]
						},
						"description": "List all Reference Data Models"
					},
					"response": []
				},
				{
					"name": "Get Reference Data Model by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"referenceDataModels",
								"{{reference_data_model_id}}"
							]
						},
						"description": "Get Reference Data Model by ID"
					},
					"response": []
				},
				{
					"name": "List all Reference Data Models in a Folder",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}/referenceDataModels",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}",
								"referenceDataModels"
							]
						},
						"description": "List all Reference Data Models in a Folder"
					},
					"response": []
				},
				{
					"name": "Create a Reference Data Model in a Folder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\",\n    \"description\": \"{{$randomLoremText}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/folders/{{folder_id}}/referenceDataModels",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}",
								"referenceDataModels"
							]
						},
						"description": "Create a Reference Data Model in a Folder"
					},
					"response": []
				},
				{
					"name": "Update a Reference Data Model",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\":\"Updated {{$randomLoremSlug}}\",\n    \"description\": \"Updated {{$randomLoremText}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/referenceDataModels/{{reference_data_model_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"referenceDataModels",
								"{{reference_data_model_id}}"
							]
						},
						"description": "Create a Reference Data Model in a Folder"
					},
					"response": []
				}
			]
		},
		{
			"name": "Public",
			"item": [
				{
					"name": "List namespaces",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/metadata/namespaces",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"metadata",
								"namespaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "List namespaces with prefix",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/metadata/namespaces/{{$randomNoun}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"metadata",
								"namespaces",
								"{{$randomNoun}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Federation",
			"item": [
				{
					"name": "Admin",
					"item": [
						{
							"name": "Create new Subscribed Catalogue",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{    \r\n    \"url\": \"http://www.google.com\",\r\n    \"apiKey\": \"4e8aabbb-543c-48ca-9ea2-e6f4032d6af4\",\r\n    \"label\": \"Test1\",\r\n    \"description\": \"Test description\",\r\n    \"refreshPeriod\": 7\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscribedCatalogues",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscribedCatalogues"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Subscribed Catalogue",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{    \r\n    \"url\": \"http://www.bbc.co.uk\",\r\n    \"apiKey\": \"4e8aabbb-543c-48ca-9ea2-e6f4032d6af4\",\r\n    \"label\": \"Test2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscribedCatalogues/5529d40c-60e4-42a0-ad8a-d11e8d5ea84f",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscribedCatalogues",
										"5529d40c-60e4-42a0-ad8a-d11e8d5ea84f"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Subscribed Catalogue",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscribedCatalogues/b73f3b26-d8d2-4e1d-801d-6c2dbe66b819",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscribedCatalogues",
										"b73f3b26-d8d2-4e1d-801d-6c2dbe66b819"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List all subscribed catalogues",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/subscribedCatalogues",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscribedCatalogues"
							]
						}
					},
					"response": [
						{
							"name": "List all subscribed catalogues",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/subscribedCatalogues",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscribedCatalogues"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Language",
									"value": "en-GB"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 28 Jun 2021 10:25:07 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 1,\n    \"items\": [\n        {\n            \"id\": \"cedf5c0d-bb30-456a-9261-dd7147c23350\",\n            \"url\": \"http://localhost:8082\",\n            \"label\": \"Mauro 2\",\n            \"refreshPeriod\": 7\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Add public subscribed catalogue",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"url\": \"http://localhost:8082\",\n    \"label\": \"Mauro 2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/subscribedCatalogues",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscribedCatalogues"
							]
						}
					},
					"response": [
						{
							"name": "Add public subscribed catalogue",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"http://localhost:8082\",\n    \"label\": \"Mauro 2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscribedCatalogues",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscribedCatalogues"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 28 Jun 2021 11:21:24 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 1,\n    \"errors\": [\n        {\n            \"message\": \"Property [label] of class [class uk.ac.ox.softeng.maurodatamapper.federation.SubscribedCatalogue] with value [Mauro 2] must be unique\"\n        }\n    ]\n}"
						},
						{
							"name": "Add public subscribed catalogue",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"http://localhost:8080\",\n    \"label\": \"Mauro\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscribedCatalogues",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscribedCatalogues"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/subscribedCatalogues/13bc7fe0-0e77-433a-bcfd-da40310abe1e"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Language",
									"value": "en-GB"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 28 Jun 2021 11:21:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"13bc7fe0-0e77-433a-bcfd-da40310abe1e\",\n    \"url\": \"http://localhost:8080\",\n    \"label\": \"Mauro\",\n    \"refreshPeriod\": 7\n}"
						}
					]
				},
				{
					"name": "Get subscribed catalogue by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/subscribedCatalogues/{{subscribed_catalogue_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscribedCatalogues",
								"{{subscribed_catalogue_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get subscribed catalogue by id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/subscribedCatalogues/{{subscribed_catalogue_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscribedCatalogues",
										"{{subscribed_catalogue_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Language",
									"value": "en-GB"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 28 Jun 2021 10:25:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"cedf5c0d-bb30-456a-9261-dd7147c23350\",\n    \"url\": \"http://localhost:8082\",\n    \"label\": \"Mauro 2\",\n    \"refreshPeriod\": 7\n}"
						}
					]
				},
				{
					"name": "List all subscribed models in a subscribed catalogue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/subscribedCatalogues/{{subscribed_catalogue_id}}/subscribedModels",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscribedCatalogues",
								"{{subscribed_catalogue_id}}",
								"subscribedModels"
							]
						}
					},
					"response": [
						{
							"name": "List all subscribed models in a subscribed catalogue",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/subscribedCatalogues/{{subscribed_catalogue_id}}/subscribedModels",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscribedCatalogues",
										"{{subscribed_catalogue_id}}",
										"subscribedModels"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Language",
									"value": "en-GB"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 28 Jun 2021 11:20:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"count\": 2,\n    \"items\": [\n        {\n            \"id\": \"48f9e524-6103-492e-a122-be18ea398a24\",\n            \"subscribedModelId\": \"29e4c643-eb76-47f1-8a5e-df5201b89b25\",\n            \"folderId\": \"7b63bd7f-3098-425b-82be-da2107e0f2b4\",\n            \"federated\": true,\n            \"localModelId\": \"8658b2cf-2c6f-48fc-beb5-98224fb12f87\"\n        },\n        {\n            \"id\": \"449b9430-bddc-4c3e-9241-a8ed08cd01c0\",\n            \"subscribedModelId\": \"cd09a7ed-c872-4a95-825c-0af0266734df\",\n            \"folderId\": \"7b63bd7f-3098-425b-82be-da2107e0f2b4\",\n            \"federated\": true,\n            \"localModelId\": \"cf20dbc5-559e-4782-8749-ce628964fb4a\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List all published models",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url_other}}/published/models",
							"host": [
								"{{base_url_other}}"
							],
							"path": [
								"published",
								"models"
							]
						}
					},
					"response": [
						{
							"name": "List all published models",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url_other}}/published/models",
									"host": [
										"{{base_url_other}}"
									],
									"path": [
										"published",
										"models"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "JSESSIONID=D2529B3580322CE90C56E29C22247AD4; Path=/; HttpOnly"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Language",
									"value": "en-GB"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 28 Jun 2021 10:17:16 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"authority\": {\n        \"label\": \"Mauro Data Mapper Two\",\n        \"url\": \"http://localhost\"\n    },\n    \"lastUpdated\": \"2021-06-28T10:17:16.967Z\",\n    \"publishedModels\": []\n}"
						},
						{
							"name": "List all published models With Available models",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url_other}}/published/models",
									"host": [
										"{{base_url_other}}"
									],
									"path": [
										"published",
										"models"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Set-Cookie",
									"value": "JSESSIONID=9D95E183AA7814F254F2042C7137E56D; Path=/; HttpOnly"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Language",
									"value": "en-GB"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 28 Jun 2021 10:24:40 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"authority\": {\n        \"label\": \"Mauro Data Mapper Two\",\n        \"url\": \"http://localhost\"\n    },\n    \"lastUpdated\": \"2021-06-28T09:00:26.398Z\",\n    \"publishedModels\": [\n        {\n            \"modelId\": \"29e4c643-eb76-47f1-8a5e-df5201b89b25\",\n            \"title\": \"Finalised Example Test DataModel 1.0.0\",\n            \"modelType\": \"DataModel\",\n            \"lastUpdated\": \"2021-06-28T09:00:25.498Z\",\n            \"dateCreated\": \"2021-06-28T09:00:25.443Z\",\n            \"datePublished\": \"2021-06-28T09:00:25.479Z\"\n        },\n        {\n            \"modelId\": \"895c5b6e-6b63-4f3d-a31f-e7f2b3d87ed3\",\n            \"title\": \"Model Version Tree DataModel 2.0.0\",\n            \"modelType\": \"DataModel\",\n            \"lastUpdated\": \"2021-06-28T09:00:26.064Z\",\n            \"dateCreated\": \"2021-06-28T09:00:25.989Z\",\n            \"datePublished\": \"2021-06-28T09:00:26.044Z\"\n        },\n        {\n            \"modelId\": \"bfc0865f-1d5f-4958-917f-4b2f7b995951\",\n            \"title\": \"Model Version Tree DataModel fork 1.0.0\",\n            \"modelType\": \"DataModel\",\n            \"lastUpdated\": \"2021-06-28T09:00:25.877Z\",\n            \"dateCreated\": \"2021-06-28T09:00:25.849Z\",\n            \"datePublished\": \"2021-06-28T09:00:25.859Z\"\n        },\n        {\n            \"modelId\": \"9b305188-f2d1-4758-9433-141d198b5c82\",\n            \"title\": \"Model Version Tree DataModel 5.0.0\",\n            \"modelType\": \"DataModel\",\n            \"lastUpdated\": \"2021-06-28T09:00:26.398Z\",\n            \"dateCreated\": \"2021-06-28T09:00:26.374Z\",\n            \"datePublished\": \"2021-06-28T09:00:26.382Z\"\n        },\n        {\n            \"modelId\": \"203762fb-27ca-4573-ae7f-19b249fc3335\",\n            \"title\": \"Model Version Tree DataModel 4.0.0\",\n            \"modelType\": \"DataModel\",\n            \"lastUpdated\": \"2021-06-28T09:00:26.284Z\",\n            \"dateCreated\": \"2021-06-28T09:00:26.203Z\",\n            \"datePublished\": \"2021-06-28T09:00:26.264Z\"\n        },\n        {\n            \"modelId\": \"cd09a7ed-c872-4a95-825c-0af0266734df\",\n            \"title\": \"Model Version Tree DataModel 1.0.0\",\n            \"modelType\": \"DataModel\",\n            \"lastUpdated\": \"2021-06-28T09:00:25.676Z\",\n            \"dateCreated\": \"2021-06-28T09:00:25.552Z\",\n            \"datePublished\": \"2021-06-28T09:00:25.559Z\"\n        },\n        {\n            \"modelId\": \"cfe5a85d-8095-4061-ad15-4a1130653399\",\n            \"title\": \"Model Version Tree DataModel 3.0.0\",\n            \"modelType\": \"DataModel\",\n            \"lastUpdated\": \"2021-06-28T09:00:26.14Z\",\n            \"dateCreated\": \"2021-06-28T09:00:26.113Z\",\n            \"datePublished\": \"2021-06-28T09:00:26.122Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Add new subscribed model",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"subscribedModelId\":\"{{$randomUUID}}\",\n    \"subscribedModelType\":\"DataModel\",\n    \"folderId\": \"{{folder_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/subscribedCatalogues/{{subscribed_catalogue_id}}/subscribedModels",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscribedCatalogues",
								"{{subscribed_catalogue_id}}",
								"subscribedModels"
							]
						}
					},
					"response": [
						{
							"name": "Add new subscribed model - When subscription already exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subscribedModelId\":\"29e4c643-eb76-47f1-8a5e-df5201b89b25\",\n    \"subscribedModelType\":\"DataModel\",\n    \"folderId\": \"{{folder_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscribedCatalogues/{{subscribed_catalogue_id}}/subscribedModels",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscribedCatalogues",
										"{{subscribed_catalogue_id}}",
										"subscribedModels"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 28 Jun 2021 11:07:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 1,\n    \"errors\": [\n        {\n            \"message\": \"Property [subscribedModelId] of class [class uk.ac.ox.softeng.maurodatamapper.federation.SubscribedModel] with value [29e4c643-eb76-47f1-8a5e-df5201b89b25] must be unique\"\n        }\n    ]\n}"
						},
						{
							"name": "Add new subscribed model - Model id doesnt exist in subscribed catalogue",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subscribedModelId\":\"{{$randomUUID}}\",\n    \"subscribedModelType\":\"DataModel\",\n    \"folderId\": \"{{folder_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscribedCatalogues/{{subscribed_catalogue_id}}/subscribedModels",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscribedCatalogues",
										"{{subscribed_catalogue_id}}",
										"subscribedModels"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 28 Jun 2021 11:09:07 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 1,\n    \"errors\": [\n        {\n            \"message\": \"Could not federate SubscribedModel into local Catalogue due to [Requested endpoint could not be found http://localhost:8082/api/dataModels/0e5c789a-3dbd-4a5e-8fe1-b4999493d073/export/uk.ac.ox.softeng.maurodatamapper.datamodel.provider.exporter/DataModelJsonExporterService/2.0]\"\n        }\n    ]\n}"
						},
						{
							"name": "Add new subscribed model",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subscribedModelId\":\"bfc0865f-1d5f-4958-917f-4b2f7b995951\",\n    \"subscribedModelType\":\"DataModel\",\n    \"folderId\": \"{{folder_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscribedCatalogues/{{subscribed_catalogue_id}}/subscribedModels",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscribedCatalogues",
										"{{subscribed_catalogue_id}}",
										"subscribedModels"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/subscribedModel/show/1d737978-2d39-45a1-b295-57930e247c61"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Language",
									"value": "en-GB"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 28 Jun 2021 11:20:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1d737978-2d39-45a1-b295-57930e247c61\",\n    \"subscribedModelId\": \"bfc0865f-1d5f-4958-917f-4b2f7b995951\",\n    \"folderId\": \"7b63bd7f-3098-425b-82be-da2107e0f2b4\",\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"federated\": true,\n    \"localModelId\": \"7854ed1d-c12a-4aeb-9b06-f70cbd2837e8\",\n    \"lastRead\": \"2021-06-28T11:20:57.252Z\"\n}"
						}
					]
				},
				{
					"name": "Get subscribed model by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/subscribedCatalogues/{{subscribed_catalogue_id}}/subscribedModels/{{subscribed_model_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscribedCatalogues",
								"{{subscribed_catalogue_id}}",
								"subscribedModels",
								"{{subscribed_model_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Get subscribed model by id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/subscribedCatalogues/{{subscribed_catalogue_id}}/subscribedModels/{{subscribed_model_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscribedCatalogues",
										"{{subscribed_catalogue_id}}",
										"subscribedModels",
										"{{subscribed_model_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Language",
									"value": "en-GB"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 28 Jun 2021 11:13:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"449b9430-bddc-4c3e-9241-a8ed08cd01c0\",\n    \"subscribedModelId\": \"cd09a7ed-c872-4a95-825c-0af0266734df\",\n    \"folderId\": \"7b63bd7f-3098-425b-82be-da2107e0f2b4\",\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"localModelId\": \"cf20dbc5-559e-4782-8749-ce628964fb4a\",\n    \"lastRead\": \"2021-06-28T11:09:53.717Z\"\n}"
						}
					]
				},
				{
					"name": "Federate subscribed model",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/subscribedModels/{{subscribed_model_id}}/federate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscribedModels",
								"{{subscribed_model_id}}",
								"federate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Subscribed Model",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/subscribedCatalogues/{{subscribed_catalogue_id}}/subscribedModels/{{subscribed_model_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscribedCatalogues",
								"{{subscribed_catalogue_id}}",
								"subscribedModels",
								"{{subscribed_model_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Versioned Folder",
			"item": [
				{
					"name": "Facets",
					"item": [
						{
							"name": "List all metadata",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/versionedFolders/{{folder_id}}/metadata",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"versionedFolders",
										"{{folder_id}}",
										"metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new metadata",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"namespace\": \"{{$randomNoun}}.{{$randomNoun}}.{{$randomNoun}}\",\n    \"key\": \"{{$randomNoun}}\",\n    \"value\": \"{{$randomPhrase}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/versionedFolders/{{folder_id}}/metadata",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"versionedFolders",
										"{{folder_id}}",
										"metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Metadata by ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/versionedFolders/{{folder_id}}/metadata/{{metadata_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"versionedFolders",
										"{{folder_id}}",
										"metadata",
										"{{metadata_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Annotation by ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/versionedFolders/{{folder_id}}/annotations/{{annotation_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"versionedFolders",
										"{{folder_id}}",
										"annotations",
										"{{annotation_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Rule by ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/versionedFolders/{{folder_id}}/rules/{{rule_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"versionedFolders",
										"{{folder_id}}",
										"rules",
										"{{rule_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List all annotations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/versionedFolders/{{folder_id}}/annotations",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"versionedFolders",
										"{{folder_id}}",
										"annotations"
									]
								}
							},
							"response": []
						},
						{
							"name": "List all rules",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/versionedFolders/{{folder_id}}/rules",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"versionedFolders",
										"{{folder_id}}",
										"rules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Metadata by ID",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"{{$randomPhrase}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/versionedFolders/{{folder_id}}/metadata/{{metadata_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"versionedFolders",
										"{{folder_id}}",
										"metadata",
										"{{metadata_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create new versioned folder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\",\n    \"description\": \"{{$randomLoremText}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/versionedFolders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"versionedFolders"
							]
						}
					},
					"response": [
						{
							"name": "Create new folder - Label already exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"nemo-voluptas-vero\",\n    \"description\": \"{{$randomLoremText}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 31 Jul 2020 14:46:50 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"total\": 1,\n    \"errors\": [\n        {\n            \"message\": \"Property [label] of class [class uk.ac.ox.softeng.maurodatamapper.core.container.Folder] with value [nemo-voluptas-vero] must be unique\"\n        }\n    ]\n}"
						},
						{
							"name": "Create new folder with no description",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/folders/651084dd-91db-475e-a061-b04e9f3823eb"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 12:07:31 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"651084dd-91db-475e-a061-b04e9f3823eb\",\n    \"label\": \"praesentium-voluptatum-laborum\",\n    \"lastUpdated\": \"2020-07-29T12:07:31.518Z\",\n    \"domainType\": \"Folder\",\n    \"hasChildFolders\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"availableActions\": [\n        \"update\",\n        \"delete\",\n        \"show\"\n    ]\n}"
						},
						{
							"name": "Create new folder with description",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\":\"{{$randomLoremSlug}}\",\n    \"description\": \"{{$randomLoremText}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/folders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"folders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/folders/fdca6136-6083-4ec3-b85c-ec0990c57e65"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jul 2020 12:07:10 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"fdca6136-6083-4ec3-b85c-ec0990c57e65\",\n    \"label\": \"corporis-maxime-enim\",\n    \"lastUpdated\": \"2020-07-29T12:07:10.331Z\",\n    \"domainType\": \"Folder\",\n    \"hasChildFolders\": false,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"availableActions\": [\n        \"update\",\n        \"delete\",\n        \"show\"\n    ],\n    \"description\": \"Odit et nemo nihil quos cupiditate ab ad.\"\n}"
						}
					]
				},
				{
					"name": "Finalise Versioned Folder",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"versionChangeType\": \"major\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/versionedFolders/{{folder_id}}/finalise",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"versionedFolders",
								"{{folder_id}}",
								"finalise"
							]
						}
					},
					"response": [
						{
							"name": "Finalise Data Model",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{base_url}}/dataModels/{{data_model_id}}/finalise",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"dataModels",
										"{{data_model_id}}",
										"finalise"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "http://localhost:8080/api/dataModels/c0c2dadd-d090-42c9-a365-804f333a2864"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 10 Aug 2020 15:56:20 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"c0c2dadd-d090-42c9-a365-804f333a2864\",\n    \"domainType\": \"DataModel\",\n    \"label\": \"rerum-nulla-officiis\",\n    \"description\": \"Perferendis dolorem laudantium. Sequi quam aut harum voluptatem saepe qui quis iste atque. Debitis eligendi neque qui exercitationem at.\\n \\rModi perspiciatis nobis culpa tempore rerum et ut. Est autem reiciendis et. Consectetur autem quasi.\\n \\rIpsum molestiae cumque vero saepe porro. Voluptatibus ea omnis assumenda maxime repudiandae recusandae suscipit quo ut. Est eum quis est ducimus voluptate repudiandae. Placeat voluptatibus eum qui nisi aliquid tempore.\",\n    \"availableActions\": [\n        \"show\",\n        \"comment\",\n        \"softDelete\",\n        \"delete\"\n    ],\n    \"lastUpdated\": \"2020-08-10T15:56:19.834Z\",\n    \"type\": \"Data Standard\",\n    \"documentationVersion\": \"1.0.0\",\n    \"finalised\": true,\n    \"readableByEveryone\": false,\n    \"readableByAuthenticatedUsers\": false,\n    \"dateFinalised\": \"2020-08-10T15:56:19.746Z\"\n}"
						}
					]
				},
				{
					"name": "Branch Versioned Folder",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"branchName\": \"testing\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/versionedFolders/{{folder_id}}/newBranchModelVersion",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"versionedFolders",
								"{{folder_id}}",
								"newBranchModelVersion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Diff Versioned Folders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/versionedFolders/{{folder_id}}/diff/{{other_folder_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"versionedFolders",
								"{{folder_id}}",
								"diff",
								"{{other_folder_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Search Catalogue Items",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dataModelTypes\":[\"Data Standard\"],\n    \"searchTerm\":\"{{$randomAdjective}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/catalogueItems/search",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"catalogueItems",
								"search"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}